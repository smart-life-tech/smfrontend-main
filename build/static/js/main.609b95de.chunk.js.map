{"version":3,"sources":["assets/sol.svg","assets/twitter-logo.svg","assets/discord.svg","assets/SolMints.png","assets/caa.gif","api/index.js","wallets/adminwallets.js","components/mints/MintDetail/mintdetail.js","actions/mints.js","components/mints/mint/mint.js","assets/images.js","components/mints/mints.js","components/mints/authview.js","wallets/cyberapeWallets.js","components/form/form.js","components/common/topbar.js","components/common/basiclayout.js","App.js","reportWebVitals.js","reducers/index.js","reducers/user.js","reducers/mints.js","index.js"],"names":["module","exports","__webpack_require__","p","url","likeMint","id","walletId","axios","patch","concat","dislikeMint","deleteMint","delete","AdminWallets","DetailContent","_ref","mint","walletAddress","dispatch","useDispatch","react","className","DialogTitle","sx","fontSize","fontWeight","color","name","CardMedia","borderRadius","maxWidth","maxHeight","border","marginLeft","marginRight","component","width","height","image","selectedFile","alt","DialogContent","src","discordLogo","Link","href","discord","Typography","variant","price","solanaLogo","supply","DialogContentText","description","includes","IconButton","aria-label","onClick","_id","_ref5","Object","asyncToGenerator","regenerator_default","a","mark","_callee5","wrap","_context5","prev","next","api","type","payload","t0","console","log","stop","_x5","apply","this","arguments","Delete_default","renderDeleteButton","Divider","Mint","setCurrentMintId","_useState","useState","_useState2","slicedToArray","setWalletAddress","_useState3","_useState4","progressNow","setProgressNow","_React$useState","React","_React$useState2","_React$useState3","_React$useState4","dialogOpen","setDialogOpen","_React$useState5","_React$useState6","checkIfWalletIsConnected","Date","parse","mintDate","_ref2","_callee","_window","solana","response","_context","window","isPhantom","connect","onlyIfTrusted","sent","publicKey","toString","alert","error","useEffect","likes","length","dislikes","makeStyles","root","useStyles","useBouncyShadowStyles","react_default","createElement","Card","borderColor","backgroundColor","CardActionArea","CardContent","renderPrice","renderSupply","size","wallet","_ref3","_callee3","_yield$api$likeMint","data","_context3","message","_x3","setTimeout","Math","floor","random","find","like","Fragment","hand_thumbs_up_fill","hand_thumbs_up","_ref4","_callee4","_yield$api$dislikeMin","_context4","_x4","dislike","hand_thumbs_down_fill","hand_thumbs_down","ProgressBar","now","Dialog","open","onClose","MintDetail_mintdetail","images","LOGO","logo","Mints","mints","useSelector","state","firstFourMints","slice","secondFourMints","newDate","getDate","getMonth","Chip","marginBottom","label","icon","AccessAlarm_default","Grid","container","spacing","map","item","xs","sm","key","mints_mint_mint","Spinner","animation","PrintPubKey","setPublicKey","useWallet","toBase58","cyberWallets","Form","creator","DAO","mintData","setMintData","_useState5","_useState6","esm_Form","onSubmit","e","preventDefault","_callee2","_yield$api$createMint","_context2","newMint","post","_x2","Group","controlId","Control","placeholder","value","onChange","objectSpread2","target","twitter","react_datepicker_min_default","selected","date","showTimeSelect","dateFormat","build_min_default","multiple","onDone","base64","Button","getPhantomWallet","TopBar","network","WalletAdapterNetwork","Mainnet","history","useHistory","useMemo","clusterApiUrl","style","cursor","push","lib","Header","Layout","Content","BasicLayout","props","flex","children","opts","wallets","getLedgerWallet","App","currentMintId","walletContext","connection","Connection","provider","Provider","Wallet","_yield$api$fetchMints","get","_x","onLoad","addEventListener","removeEventListener","ConnectionProvider","endpoint","WalletProvider","autoConnect","brandLogo","authview_PrintPubKey","CyberWallets","components_mints_mints","form_form","reportWebVitals","onPerfEntry","Function","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","user","address","undefined","action","filter","toConsumableArray","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","es","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.609b95de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sol.0e02ac58.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter-logo.5c97ee2a.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord.145dc557.svg\";","module.exports = __webpack_public_path__ + \"static/media/SolMints.426ca0ea.png\";","module.exports = __webpack_public_path__ + \"static/media/caa.e351dc58.gif\";","import axios from 'axios';\n\n//const url = 'http://localhost:5000';\nconst url = 'https://daospot.herokuapp.com/mints';\n\nexport const fetchMints = () => axios.get(url);\nexport const createMint = (newMint) => axios.post(url, newMint);\nexport const likeMint = (id, walletId) => axios.patch(`${url}/${id}/${walletId}/likeMint`);\nexport const dislikeMint = (id, walletId) => axios.patch(`${url}/${id}/${walletId}/dislikeMint`);\nexport const deleteMint = (id) => axios.delete(`${url}/${id}`);","\nvar AdminWallets = [\n    'FYFpbvpzWQMPBmG4joHGprsjiJsudkpqxjTepFEWeDUk',\n    'AjRsgmsCT6c9teg6gQ93TadMNxkB4Ja7jcAAqLJG1Ti8',\n    '9R22xbX1JGyiLxrrchwvXF5PixuWqwvA3ZGaWnY9eQKv',\n    'C8RbV2FYiUZsUttSHxP588sCssuHFeRcWdCkwA9GcSQ3',\n    '6A7kEripQBqmiWxsrnAA9kufbX5s6pq15xRWeHDMrAxm',\n    'FSZWq16695s5M7FAgVRkJPgqfAAxKbrPoWKEWTWPMeAK',\n    '5qDhn4SfxYJvxBYjtNQJGZEBRmtYhvmKW3Eh3Rt2p5VL'\n];\n\n\nexport default AdminWallets;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Paper from '@mui/material/Paper';\nimport Draggable from 'react-draggable';\nimport CardMedia from '@mui/material/CardMedia';\nimport './mintdetail.css';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport solanaLogo from '../../../assets/sol.svg';\nimport Divider from '@mui/material/Divider';\nimport discordLogo from '../../../assets/discord.svg';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteOutlineIcon from '@mui/icons-material/Delete';\nimport { useDispatch } from 'react-redux';\nimport { deleteMint } from '../../../actions/mints';\nimport AdminWallets from '../../../wallets/adminwallets';\n\n\n\n\n\nconst DetailContent = ({ mint, walletAddress }) => {\n\n  const dispatch = useDispatch();\n\n  const renderDeleteButton = (mint) => (\n    <IconButton color=\"info\" aria-label=\"delete\" onClick={()=>{dispatch(deleteMint(mint._id))}}>\n      <DeleteOutlineIcon />\n    </IconButton>\n  )\n\n  return (\n    <div className=\"dialog\">\n\n        <DialogTitle sx={{ fontSize: 30, fontWeight: 700, color: \"white\" }}>\n          {mint.name}\n        </DialogTitle>\n        <div className=\"center\">\n        <CardMedia sx={{ borderRadius: 5, maxWidth: 300, maxHeight: 300, border: 1, marginLeft: 'auto', marginRight: 'auto'}} component=\"img\" width=\"300\" height=\"300\" image={mint.selectedFile} alt=\"mint\" />\n        </div>\n        <DialogContent sx={{ width: 550, maxWidth: 550 }}>\n\n        <div className=\"links\">\n          <div className=\"votes-block\">\n            <img className=\"inline-logo\" src={discordLogo} alt=\"Discord\" width=\"12\" height=\"12\"></img>\n            <Link href={mint.discord}>&nbsp;Discord</Link>\n          </div>\n          \n        </div>\n\n\n        <div className=\"votes-block\">\n          <Typography variant=\"body2\" sx={{ color: '#e6e6e6', fontWeight: 900 }}>{mint.price}&nbsp;</Typography>\n          <img className=\"inline-logo\" src={solanaLogo} alt=\"Sol\" width=\"12\" height=\"12\"></img>\n        </div>\n        <Typography variant=\"body2\" sx={{ color: '#e6e6e6', fontWeight: 900 }}>{mint.supply} Supply</Typography>\n\n        \n          <DialogContentText sx={{ color: '#e6e6e6' }}>{mint.description}</DialogContentText>\n\n        <br></br>\n        {AdminWallets.includes(walletAddress) && renderDeleteButton(mint)}\n\n          \n        </DialogContent>\n\n        <Divider />\n        {/*<Typography variant=\"body2\" sx={{ color: '#FFFFFF', fontWeight: 900 }}>Comments</Typography>*/}\n\n\n    </div>\n  );\n}\n\nexport default DetailContent;","import * as api from '../api';\nimport { useState } from 'react';\n\n//Action Creators\nexport const getMints = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchMints();\n        dispatch({ type: 'FETCH_ALL', payload: data });\n\n    } catch (error) {\n        console.log(error.message);\n    }\n\n}\n\nexport const createMint = (mint) => async (dispatch) => {\n    try {\n        const { data } = await api.createMint(mint);\n\n        dispatch({ type: 'CREATE', payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n\nexport const likeMint = (id, wallet) => async (dispatch) => {\n\n    try {\n        const { data } = await api.likeMint(id, wallet);\n\n        dispatch({ type: 'UPDATE', payload: data });\n\n\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const dislikeMint = (id, wallet) => async (dispatch) => {\n\n    try {\n        const { data } = await api.dislikeMint(id, wallet);\n\n        dispatch({ type: 'UPDATE', payload: data });\n\n\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\n\nexport const deleteMint = (id) => async (dispatch) => {\n    try {\n        await api.deleteMint(id);\n        dispatch({ type: 'DELETE', payload: id });\n\n    } catch(error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport Button from '@mui/material/Button';\nimport Card from '@mui/material/Card';\nimport { HandThumbsUp, HandThumbsUpFill, HandThumbsDown, HandThumbsDownFill } from 'react-bootstrap-icons';\nimport { likeMint, dislikeMint } from '../../../actions/mints'\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport { CardActionArea } from '@mui/material';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport './mint.css';\nimport IconButton from '@mui/material/IconButton';\nimport { useDispatch } from 'react-redux';\nimport solanaLogo from '../../../assets/sol.svg';\nimport { useBouncyShadowStyles } from '@mui-treasury/styles/shadow/bouncy';\nimport cx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport DetailContent from '../MintDetail/mintdetail';\nimport Dialog from '@mui/material/Dialog';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { format, compareAsc } from 'date-fns'\n\nconst family = 'Rubik';\n\nconst Mint = ({ mint, setCurrentMintId }) => {\n    const dispatch = useDispatch();\n    const [walletAddress, setWalletAddress] = useState(null);\n    const [progressNow, setProgressNow] = useState(null);\n    const [open, setOpen] = React.useState(false);\n    const [dialogOpen, setDialogOpen] = React.useState(false);\n    const [youLiked, setYouLiked] = React.useState(false);\n\n    const day = Date.parse(mint.mintDate);\n\n\n    const checkIfWalletIsConnected = async () => {\n        try {\n          const { solana } = window;\n    \n          if (solana) {\n            if (solana.isPhantom) {\n              const response = await solana.connect({ onlyIfTrusted: true });\n\n              setWalletAddress(response.publicKey.toString());\n            }\n          } else {\n            alert('Solana object not found! Get a Phantom Wallet 👻');\n          }\n        } catch (error) {\n          console.error(error);\n        }\n        //hi there\n    };\n\n    useEffect(() => {\n        checkIfWalletIsConnected();\n        setProgressNow(((mint.likes.length)/((mint.likes.length)+(mint.dislikes.length))*100));\n\n      }, []);\n\n    const getLiked = () => {\n      console.log(mint.likes);\n      return mint.likes.includes(walletAddress)\n\n    }\n    \n    \n    const Likes = () => {\n      return mint.likes.find((like) => like === (walletAddress))\n\n        ? (\n          <><HandThumbsUpFill />&nbsp;{mint.likes.length}</>\n        ) : (\n          <><HandThumbsUp />&nbsp;{mint.likes.length}</>\n        );\n    }\n\n    const Dislikes = () => {\n      return mint.dislikes.find((dislike) => dislike === (walletAddress))\n\n        ? (\n          <><HandThumbsDownFill />&nbsp;{mint.dislikes.length}</>\n        ) : (\n          <><HandThumbsDown />&nbsp;{mint.dislikes.length}</>\n        );\n    }\n\n\n\n    const useStyles = makeStyles({\n      root: {\n      },\n    });\n\n  const styles = useStyles();\n  const shadowStyles = useBouncyShadowStyles();\n\n  const handleDialogOpen = () => {\n    setDialogOpen(true);\n\n  };\n\n  const handleDialogClose = () => {\n    setDialogOpen(false);\n  };\n\n  const renderSupply = (mint) => (\n    <Typography variant=\"body2\" sx={{ color: '#14F195', fontWeight: 900 }}>{mint.supply} Supply</Typography>\n  )\n\n  const renderNullSupply = () => (\n    <Typography variant=\"body2\" sx={{ color: '#449c77', fontWeight: 900 }}>Supply TBA</Typography>\n  )\n\n  const renderPrice = (mint) => (\n    <div className=\"votes-block\">\n      <Typography variant=\"body2\" sx={{ color: '#14F195', fontWeight: 900 }}>{mint.price}&nbsp;</Typography>\n      <img className=\"inline-logo\" src={solanaLogo} alt=\"Sol\" width=\"12\" height=\"12\"></img>\n    </div>\n  )\n\n  const renderNullPrice = () => (\n    <div className=\"votes-block\">\n      <Typography variant=\"body2\" sx={{ color: '#449c77', fontWeight: 900 }}>Price TBA&nbsp;</Typography>\n      <img className=\"inline-logo\" src={solanaLogo} alt=\"Sol\" width=\"12\" height=\"12\"></img>\n    </div>\n  )\n  \n\n    return (\n        <Card sx={{ maxWidth: 345, borderColor: '#2b384e', borderRadius: 5, backgroundColor: 'rgba(240, 248, 255, 0)' }} variant=\"outlined\">\n          <CardActionArea onClick={handleDialogOpen}>\n          \n            <CardMedia sx={{ borderRadius: 5 }}component=\"img\" height=\"200\" image={mint.selectedFile} alt=\"mint\" />\n            <CardContent className=\"card-content\" sx={{ backgroundColor: 'rgba(240, 248, 255, 0)' }}>\n                <Typography variant=\"h5\" color=\"white\" sx={{fontWeight: 700}} >{mint.name}</Typography>\n                {/*<Typography variant=\"h5\" color=\"white\" sx={{fontWeight: 400}} >{mint.mintDate}</Typography>*/}\n                {mint.price!=null && renderPrice(mint)} \n                {mint.price==null && renderNullPrice()} \n                {mint.supply!=null && renderSupply(mint)}\n                {mint.supply==null && renderNullSupply()}\n\n\n                </CardContent>\n                </CardActionArea>\n                <CardContent>\n                <div className=\"votes-block\">\n                <IconButton size='small' color='primary' onClick={() => {\n                  dispatch(likeMint(mint._id, walletAddress));\n                  setTimeout(() => setCurrentMintId(Math.floor(Math.random() * (10000 - 5 + 1)) + 5), 200);\n                  setProgressNow(((mint.likes.length)/((mint.likes.length)+(mint.dislikes.length))*100));\n                  }}>\n                  <Likes />\n                </IconButton>\n\n                <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>\n                <IconButton color=\"warning\" size='small' onClick={() => {\n                  dispatch(dislikeMint(mint._id, walletAddress));\n                  setTimeout(() => setCurrentMintId(Math.floor(Math.random() * (10000 - 5 + 1)) + 5), 200);\n                  setProgressNow(((mint.likes.length)/((mint.likes.length)+(mint.dislikes.length))*100));\n                  }}>\n                  <Dislikes />\n                </IconButton>\n                </div>\n                <ProgressBar now={progressNow} />\n                    \n            </CardContent>\n          <Dialog\n            open={dialogOpen}\n            onClose={handleDialogClose}\n          >\n            <DetailContent mint={mint} walletAddress={walletAddress} />\n          </Dialog>\n        </Card>\n    );\n}\n\nexport default Mint;\n\n","import logo from './SolMints.png'\n\nconst images = {\n  LOGO: logo\n}\n\nexport default images","import React from 'react';\nimport Mint from './mint/mint';\nimport { Spinner } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Grid from '@mui/material/Grid';\nimport { useSelector } from 'react-redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport \"./mints.css\";\nimport { useConnection, useWallet } from '@solana/wallet-adapter-react';\nimport { WalletNotConnectedError } from '@solana/wallet-adapter-base';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Chip from '@mui/material/Chip';\nimport Footer from '../common/footer';\nimport CalendarTodayIcon from '@mui/icons-material/AccessAlarm';\n\n\n\nconst Mints = ({ setCurrentMintId }) => {\n    const mints = useSelector((state) => state.mints);\n    const firstFourMints = mints.slice(0, 4);\n    const secondFourMints = mints.slice(4, 20);\n    let newDate = new Date();\n    let today = newDate.getDate();\n    let month = newDate.getMonth();\n\n\n\n    return (\n\n            \n            !mints.length ? <Spinner animation=\"border\" variant=\"info\" /> : (\n                <div className=\"mints-container\">\n                    <div className=\"button-container\">\n                    </div>\n                    <Chip sx={{ marginBottom: '25px' }}label=\" TOP UPCOMING MINTS \" color=\"secondary\" icon={<CalendarTodayIcon />} />\n                    <div>\n                    <Grid container spacing={3}>\n                    {firstFourMints.map((mint) => (\n                        <Grid item xs={6} sm={3} key={mint._id}>\n                            <Mint mint={mint} setCurrentMintId={setCurrentMintId} />\n                        </Grid>\n                    ))}\n                    </Grid>\n                    </div>\n                    <div className=\"sub-divider-text\">Vote On Other Upcoming Projects </div>\n                    <Grid container spacing={3}>\n                    {secondFourMints.map((mint) => (\n                        <Grid item xs={6} sm={3} key={mint._id}>\n                            <Mint mint={mint} setCurrentMintId={setCurrentMintId} />\n                        </Grid>\n                    ))}\n                    \n                    </Grid>\n                    \n                </div>\n\n            )\n    );\n}\n\nexport default Mints;","import Mints from './mints';\nimport { useWallet, WalletProvider, ConnectionProvider } from '@solana/wallet-adapter-react';\nimport React, { FC, useCallback } from 'react';\nimport setWalletAddress from '../../App';\n\n\n\nexport const PrintPubKey = ({ setPublicKey }) => {\n    const wallet = useWallet();\n\n    //if (!publicKey) throw new WalletNotConnectedError();\n    if (wallet.publicKey) {\n    setPublicKey(wallet.publicKey.toBase58())\n    }\n    if (!wallet.publicKey) {\n        setPublicKey(null);\n    }\n\n    return (\n        <div></div>\n    );\n};\n\n","\nvar cyberWallets = [\n    \"5RyzGmZyXKRjSvVfaDtqAx3XWPUDRPC4wrS28qR9jbaP\",\n    \"GqFjWMt7pTU2eQve5UjGgoY9ZbeKQTJca9QQYhMFd4ps\",\n    \"631JMoToZwnbbh6Rru1pzp41KSiwAsDnhqch14t3NJhy\",\n    \"686xiTgxNjMmb4KBAib2EbdAdTNEby9EYsXBv3spUFvM\",\n    \"EBav468o3Xou7LLndanbuF7eGDap5GRo2pKRhJggQHKK\",\n    \"rCiBiHpAjoocn6siXckMpjh5BuYd3Tksvwe9aNyb2jQ\",\n    \"6EVth7Gy9Jz6ArviGCaKLcNe3BU2QkYNzn4UgUUzb51M\",\n    \"B94EBLASPbxymADBje3bA5YZJFVK915S5weE6wdRjR5u\",\n    \"4iRS3UkmwXdbnD1CyrLdaw2UTazPN1aZ9ayDbkkPYmfF\",\n    \"S6EuV8rkqb3PqG4DMdy33fVjMnHKDULmJWJH4guvhAY\",\n    \"ExGu7m1fzLavr4KCfNZvduJ3cSUiwsZjvVw8RjCYBhd8\",\n    \"1BWutmTvYPwDtmw9abTkS4Ssr8no61spGAvW1X6NDix\",\n    \"6s2pwmuyHBXtFbXs4ThZmYHTcXNSz44zonVgTD7ABmub\",\n    \"65MfJkPRChe9i5vy34A6KQGa3KJSPCXxxku7fNFjAZR\",\n    \"8WPofA6CdhBuUfpZxPGLdoB8tUm7QDGajwDpgqYFppzf\",\n    \"CRPZR7ftPW9Qz7piXRwQQXu5Ys7smcZddtmLhyMSo4ed\",\n    \"8FYdHiF7iUkzpJk3oL9HTsoFktQGngACn7syakVqYNgi\",\n    \"GPZJE1aAjzg1inSu4bYh2VAQBnW7uxMDrMvxWPZKTByJ\",\n    \"4eaCJNqtXLzn3xxUyQ8MwDAU4swpn8cLL2jLD6NsxM4R\",\n    \"H2UwjA5373z5yMsK4ii23uQpRSfwJtKEwrNcbSko6V7\",\n    \"EV7EzME5ae36p5LRNyM3TQB4rNpbB3EC8cubMafVzQM7\",\n    \"2KnwxYHLd3L2ZJXvc4UVNNHNMWmXaFZFeAp5hpsvrLqb\",\n    \"EADwpraKZ7qpN7CaM9iGugtBQnygdKP98APGeEXbEKgz\",\n    \"HS4rboSgWRQuKnYwe27REtH5jPwuZu3MyvkrwqDvYX1A\",\n    \"2mLTNEth8jXymH5qJZgAfxYJpWNqgJ1S3zxduuUMZS18\",\n    \"EqG4cQhjyT3hwprLQneHFzeQwAmxB1CksTfcG9Rm1F8a\",\n    \"HsQef8rv3S9NYLZMBTXY4Jv5jrrcQ3GRhrpC6n3eWiZU\",\n    \"7i9qknRsnwiXhFu1rgKBU7YnDapwKzqbh4kfo4cRZRwM\",\n    \"3NT528oatDUiCpXn2RXV9VLzaoo84DfUhaeBADqqaCab\",\n    \"GESEmAorHFAmLpypHQvDPoqGbzj72bAz4a9RE9Jcq9gd\",\n    \"2CUAhReX9ctfAQRwqb5XZVpmE2P8bfxaUMfqaqjwGWX3\",\n    \"37n7SWFvG7R6o1BkhboXvzhuA5bfuPXwLT4iryKBHnnT\",\n    \"8tEGEg48aQAPLcNRbBSHJYARqLVspDxCJytzqAW3C4aw\",\n    \"A6FqBXM5mWHMLXbwkycU69R51epcWJdPQgo1Z4v5RQ3i\",\n    \"B4HA4cBTuhWzME91XUnc63puyTGpMWkp5ibENWFkuBd2\",\n    \"7mZwuYkPgfAU3MeKSCvrYKmTmM38oKWnMXaaj6yZ9X4x\",\n    \"EMMBtRyHaEVCBQV3rZat9yEPEE6TQTHLxEUPRKiVVrpJ\",\n    \"8RK47CX8YTfX48N1CWwNfiwVohjAX3f4Uzhbon72jB9Y\",\n    \"2zNcdHXejsxDio3vVnY6nPso9bj5ZksiLRrxWzmtRort\",\n    \"2g8tFkGEmTmTCSe6QRVMVw8SmzLjPWhbGGecow9CEsUa\",\n    \"BJ6tWZVXNNArmWTxg32VmaWPRPzqpo3zCeooWAuYCvm2\",\n    \"AGVL7zwe82hrprpoQjP5kFcS3PgwykoVxYKJsQ3NpPTq\",\n    \"BApzF7eb8sB4mH4WawL3WZXQuUpvdResN74ow9P3Pkso\",\n    \"AMHhBNAf9NLPFC5uFUWnQaebKY6UiVQ6yGxUmF5FA4Qb\",\n    \"HPW2T2s1hqJa6wxnNr8z2srokEGWooWvKKNPQBGwiGbT\",\n    \"CYFUcZk3QsaxNaaGLzF4CZxsE1KtxGsaG8BQVhstMygN\",\n    \"Hf9b7sKsMUu6K4iogGVZCbiN9vLZWMNZhCP9wGDdzoKd\",\n    \"3KwMmMqu4a7AztE6TNFWTeAmE8qRG483jqCTWcprvZNT\",\n    \"CSB4HmuNdMuPp2aueq1sC3cJkpiaC6AAJkqxRSnVjGTL\",\n    \"73Nyxihgq5XjWc6vFDYMf7vmbHiJ19RYXz8adSnRBaqA\",\n    \"8EmNziMb48ueHtKHZ8Gee4mdYm1uk8Ti4arg5FELJsKQ\",\n    \"C4YbRVm91EY3EhrzKvXKKdyY6XiArZUGPrw5hkufy3r4\",\n    \"67g1g2wP8fBGLqfCXdDEBz5XGexonieZvCSz9ig6UFMW\",\n    \"GyJnicLmLVMkVBkesc9uYk7ZYeWehaWqWTQ2d28vhrbp\",\n    \"FsAxY4M8tnVTGVPQQFqRDjSXLwmqSD61XEtJvBLAjGeu\",\n    \"3YPMGmGD7m25snZZtPLqFeqntmkrKoNdWMbCks4pD8eW\",\n    \"FkNLKHeEyE6TeCRFJnmEGwaip9Z5jpvef6oEzVKSeAEM\",\n    \"78ot2MR2S2N65SyfK6eFcMRqbSLDUFGkBMQ6Hs2QzbsL\",\n    \"9wGdQtcHGiV16cqGfm6wsN5z9hmUTiDqN25zsnPu1SDv\",\n    \"27CUFbpspUmw1xht8axuWLkHurZgvbYHufn7v6h2N1uY\",\n    \"CugdK9yYFGZdVU45Na3vBJs3iG4KZCdGJ5XDFHRW7hpn\",\n    \"3L233j1SCeqXWhbVR6ZKxNxyF3ACprNahtPu8xRE9Q5h\",\n    \"C7EmoYmDZCdTM3Vu83mJRoakXxazxCj9L1K3TpL58RMD\",\n    \"9eHbktzcFsQaSvoP2aPUGGXmqmvvhjttYXJ2j7TvS9bJ\",\n    \"EYSZj6eHSHYGiRVrU3kJDG7MjqRPeF1G9HK7XHXM5KHZ\",\n    \"6pJSiumwJGYb2tpJArWzuaLKDPAivCFPamVDv6NbYD7H\",\n    \"Dp9doEc4VNjFuYD4JJ8A2esuZGvxg5zQ6xhcHjFVFxwo\",\n    \"62cz17zY6xF5fP3XDTkdufc5R9WpRXNbrpwarz1XbMWL\",\n    \"78ZCJrNpULg85xiMDMKfK9W7W4VVd1v5BioV1KLyFMhr\",\n    \"boGPWdRs1fRTyzah5ocyRNzxiMna2b1NwcBdTKCsPQX\",\n    \"ynASo48kNbCMkM9oJ66TxSuu4jowwj9dsxJYZska9GG\",\n    \"AJpuaH2Ke13VoMrk8MRCE693yMWMLyTBf2e2J48Pzz7j\",\n    \"Hk5fFB15LCV2vFueDZq82V9LZvaGdz1XNDAe87EAv46b\",\n    \"7jcQGZSS9LTNU1ZHxWBtnoGmPSaC27VcdHwDpYCfG9G5\",\n    \"4FidWxhJPRYADhMi6HYrMefTFn3LwBiKhBC2qC84FyDv\",\n    \"6gXpc8VuSjTzQnkNom7Z2kqgNStLHuLHnspTMbdqoCvr\",\n    \"H9oLwuVGCX59t1fnXDvmXDjsbqDN1kM44YUWEwagtkz3\",\n    \"4q14SdaEKpFa7hVvDm3NrxcLeZY9AQ4cPVHWxuiAjmPy\",\n    \"GgKKos3JmgpNbhBnoXjvRgfzuvMHR4UfJhfEyz5xCK2j\",\n    \"r8oL8L6db3qrpJXjr4f2cM7akPLZWZQBPjjhykaJc5F\",\n    \"4ppwrW7EbCEhz8G3PDRPK6uvabPpJ9T8CWrwSn25R9Uo\",\n    \"Dq5TN2sFxQVHtecsuT1hVNDxyHhknrARG6Zinu1bRwws\",\n    \"7Ee9LMguvY6nqFmYBxJRXdvfqZRCpujELDn1UEXxULHU\",\n    \"9KrA8BXQVW9e4Gki9N9ZMWddrR2pdQpKJP3R6UWk7G1q\",\n    \"6NzLP1A53CVwk4PYFuSDQ5rhAC6ZwT78PdEVodEx1neN\",\n    \"HjC6FsR9i54qDAeGu9fraq2xo7D8oquDAuau63mkAAgD\",\n    \"7yRNtWmV5nodp221APcpMAVKTZ9SkwGTq52QmrfoNnQW\",\n    \"6Zp5zJezumSiWP1dS2BdH6P3dWt7DVobCVarHFNhoRGr\",\n    \"BNYAWikBa74q8X2WWyqbxr5ygTWxSCamnrWSAhVDxLi4\",\n    \"6dHe4Mbsnn4EVBKrsLYmaHxk7Gecs5WX7jK1ZXpArUrp\",\n    \"2MZELmUGRKt5bc4HUUBE4TWjFk4swsohHmyWWCUcoWwR\",\n    \"Cs6tN5JuAnuHgnrYhK43FMoX6C9JW54eBQvrCaq4MFYF\",\n    \"6uxKaNiMZZFM6gU95DuUNwJfZS7ZLfT6TEtcN6pbgvCr\",\n    \"CYjdJBWEHuCto2JY67gfLmwUTHKw8nWtazzj27HpaoXa\",\n    \"DfTE9zUd5y5pYvYTkaApVFcZkC6WJZv7CKPY38DUq2oz\",\n    \"9DzN8Lym5rgxx2p89FuwiugPkfhh6zSNu7JpzNtMW6mU\",\n    \"BBYTCPn2LHseUKQ7JLbEa3QPA7a1NZhn5ob3tniaEn3i\",\n    \"BtksXXRRGHfoFZVsq7rmvdjFJJ82XoADVwSFNMmpqrJr\",\n    \"3dJfx7NYkSXwYts9jVS8RAoNWKmSiHFeAJyWqXucjkTv\",\n    \"CaqmcDoSf8FnASrQskbyYuvXNqAagERaGdYuiXMxjmqY\",\n    \"FY9Pd7QPaXXDnYq3FWbfuPtqePktfo4WwSxo2ESnckEy\",\n    \"GZf9bEYC8ozMEf8MMas5ff8yUwDNJftg6za5xfFMuRBV\",\n    \"BszGmLMkLbBzKFfwAXPDb7tDV8dnHTsbP4QTSi9EqkDa\",\n    \"66Js7vpncVEnzzzdQwRJMfgtVhDqLzPbh3Rh3ruWKdq9\",\n    \"GmdLinRV48e7PmxPoDRSPtvA7bMCZ8svMS892p3Pp3B8\",\n    \"BE5Mn9TtHh2oRxasKrF8bCBTLwH8n2uK7kvW6qtgVJ5n\",\n    \"tbFkbChnHSTgeDTzb6J5mHbf5iWDRFkKty3o2wzUoyu\",\n    \"FvcZxpvkYZb39vrHGyRThrzwdTKzKpra8e51LyTfTs1Q\",\n    \"8pNq6s57yzsYrAaNjreFXPmJnWETd46nWkugUAjWaWAA\",\n    \"DqRu4r7VMawiq5GQyAqRfDjNBwjh9zr9KjVgpe4cdK9i\",\n    \"4AhdwiKcP9Y9YYorXGq5qzkS5W6Na4P8TjAuZS742HC5\",\n    \"FaS8mLx5kUSe7avWZdWQ6rVDXgHrSLBw1PV2d6JjyNUP\",\n    \"5uMFGKjZe6mfnxZTccq4iQ4NdKfimy8Jh8w5YhUztAoG\",\n    \"3BtJjMUZyaDZdxrZjSy1iUo5hwiEBaHBHBBtWAXUwCCa\",\n    \"8KbMXGdr53rgGYj4VyGK1muCZPFNwrtBzdZASjTZu8Nz\",\n    \"DVk749Xo5sdRN9JHSXS9ZScZVT8cZHZfaoSKuSLKZ7Jh\",\n    \"QVhGi2xjXmWvUCqBbSbYZ7vqBpghBoZSJXykZHhPJe6\",\n    \"3LpeCCbUSvcvzCZcLUo933RJRDe9sCazktESeT5hSJzP\",\n    \"4igMuQBEG45ExgEDkGb7zMzvua9ZfAf3dR9GMqkPS58G\",\n    \"EQtMc2CLh2tgzNPDw1BuMVu6iEdue2TCzeoC9iVJ8Yer\",\n    \"FNHNyWL3EAv7erKbDhBGMbWjsn2va8Zz71JaxMU2Ruxb\",\n    \"4seUEAFkrVfzz59Rt3gFXvX1gJYUnGVjNnJ8RZ5AKpjw\",\n    \"ACa6y3WCEFNjcdSHbuxp4F8GeJUU3ERredqAz9N46vnb\",\n    \"EqkeJeSnhb7TRzBznRhBVwuJAh3CSAFLoWTDsahZK1G2\",\n    \"73j9JKLT57HcqY8WhydE44AiTTJRTVVAmwwdZBi1vvv5\",\n    \"E1NrF1ghfyfA7oiUmhPeqqvvHv6pFcYx9BZg29P1QGnQ\",\n    \"DJ5ddchS33mGUqJKoC7FqD2s6SCL794svUgbemsidLER\",\n    \"D1yePFMa7QGfkDrKTv7wfcCpmQ6HL991UCwWppeN2xPN\",\n    \"5U7bPXNPL8MeN6Kb9F3PixjGmAmE5BYQyz491TX9Q3ju\",\n    \"EdGLiMZc4GS3QASRfQ6gSMRZKvbALysBddQGFzahnwWK\",\n    \"H5gHfPjJTaC4Zs7vWFVuJttxN5jsC9g6iYB5FCWAnarZ\",\n    \"5E3oXEFtR79NmLmANXKGkNTrfupHjdAZtGBeZBm8Xftw\",\n    \"2PQVwQXbSqNENGHewU2z7ykteQWQaymAbCF4fF3Xcz3i\",\n    \"vdgKxBRdyvG8xaZvQ1whZK47ehgaQ4HihTqa8crt8DZ\",\n    \"3AHANxBPFMFJ6vNkZg8zTCZ2TqrjZkcoaxJJPmzsP4wY\",\n    \"G7cefdFmdhQZg5vrjA27Po7UPLcudaTpHz9N1t7QQWZA\",\n    \"F1FdejpPqvvzVJgwK6vRAMJnatMiXYwmuh3QwLsfc8vn\",\n    \"51VSdHPPqmxioXUhChi6Kx8tfNJwuvcCZySep1kcm5mf\",\n    \"GMekZPvgbkcFGGSMNkn2X4LT6iYxsbzotPSwDAyNyGJr\",\n    \"wMb52QeUjWusayg73XJCSUqJAWmYrg4ikBnsGttEJrT\",\n    \"4RBGHDJMhuKPM4Ez33i5h1FZqSsoZyqX9QKME8XcrXsE\",\n    \"DNufHgK8BTjbNXKGvdxDQBHHB1Fh4sLCuFJedrGPDbBK\",\n    \"BccNxqGZG3PkVmv5wExvmLve4Xy3jqrrvtgwbPUb2RLr\",\n    \"7pa6xwRtLZbBU32g2tds2AudaeLSURmVWAZYM6EzeBt4\",\n    \"6M45ihLjbAEoS7SyP4o32ZQ8P8yuRxmhxKUhP9yg3s18\",\n    \"5TzH3smNVtiAndpBbcxDw7C8TdEG3ecTcDeLAB3FRtzA\",\n    \"82ZeMQxUeCEmBB8SFAkSvkAc2rkkRy9LDdVBtGJXMXh2\",\n    \"14WarHTcfFZr3X5kxaY9ZT23iwuwjxFQd29WUgXz3GdE\",\n    \"BAKdsFfg58hN7FV78o7vKdHzwspsYkPUxAAa7SQxHKsi\",\n    \"XZgUejoBJziEfC41Abs2jA1zfLEP7JE6UMCxYQQRFbJ\",\n    \"AVc92ZSqYpoWmsvPAiJSMnv8TmFUtP6C1UUqsERKHSfF\",\n    \"JE5CHekhvSdMbCbRoa8t2DmKeRyrs3FCqXQBEVJzdiAM\",\n    \"AxEYDz9p5j34k1AuLv2SndJR2jFvF65bTaGiT6sE5Ja4\",\n    \"6iN1YeRjLCzufs7qNXWQR5fmTysHsVNH1zJcaJUMpxf\",\n    \"5Ji32qzY4uXtA7r3jDDSNVPeCRWWfMGa4fZCng8z8CPN\",\n    \"6xDSKUjfBr5czFeoneLqGkY1cDQAwnu6bN1oCWLbCSmD\",\n    \"BruUq2EcRUrcCBkjWs6Rcd8fEq72hzTR1xy4iZwx2TeD\",\n    \"9HZMFQWfVHL9rif1wGYVmnNMDaYkeSpzpDRnahWMupZi\",\n    \"65AfdAoMtet53m3xuW7BSgkKaFk8bWFJFGXB3NdaLuvL\",\n    \"ELBWDckWmTEWnsadvNGLtQJBe91jMwNafxJbRdvCVF7j\",\n    \"Ht7pDshozgKrrtb3uiYBxxkGPTcmyWKN4Ld79rsqHEps\",\n    \"3pe9n4p12YcMadcYE8zUShv6ngE2n3F7W77ebDWbr6Na\",\n    \"J39vQ2iqyVX2aLTriYvHMyY4Kpp8HMaykz7JaoK639zH\",\n    \"5LocFx11VAfHzX3kNhnkuQRjGi13h5A5xxsyPTHBxe6s\",\n    \"AmJFcnUmiRN73BB5R3vA8yGb98f8dKvAAuw3k2Y1FgkS\",\n    \"GfQ7XQcREAbGxDMRCYoW94LUbc4yZNJPryQLtwXuu4d7\",\n    \"8ubEoRr86y4tjsEWLXjovWDKQKws2RUE9WMHvWYRUhJM\",\n    \"717vKzNyybfV9Vcyu6r4n1paCPHwesuXYRBTG57pZ9im\",\n    \"CChiTb7NB8tjCnEREDf6NfZW1WbjM1jJGZAmZBBW8VAN\",\n    \"DJNWD3v2KGF92r4mYzpMqBbKX1mk467hVhjj322HkKTr\",\n    \"C8RbV2FYiUZsUttSHxP588sCssuHFeRcWdCkwA9GcSQ3\",\n    \"GiqS6e7rnAGq9aBZWtoGQbQdq7DikSDiFAFLsuJiw5mQ\",\n    \"BzyLph8EajKowtZ6NHv1tuuzgawY15iNqP4qKSTQULF6\",\n    \"GXHmdf7BKYvjgMTc2NGGAZkKNSaUPQRtrSQn6UfRnvJN\",\n    \"E91Wn2zMxC3VpDCfrZRuDqn7eTLGt1m8BaPL2WmD6MdW\",\n    \"7YPB4BSR13z8eDhtYHEa4XLZrg39Bes1fBMettEQtW3B\",\n    \"GSvswiC9Vuky9McF6JGQ9s6oaR5GTo5qvAa8fZok8Yx6\",\n    \"Btepp699bGX88GdNNZ85dG9rUwHWZiPKRyx4ht5dkE5e\",\n    \"GLRpcjWR66HHqqH3FDhiiYiNTunZw1ZNZm24uGZnYYaA\",\n    \"GSDmghdWBkUM6tLYfAjgva4ySfTeXV1LViZDei22FnZi\",\n    \"7GUdFKruAjP4x8ygEvcXoEPsvVTNYFyCbHTjat9dssLq\",\n    \"E1At1fWfne7iZzZMfmDZfJiAMeqoWheSAQKn4APN4p8P\",\n    \"BFghGErfUBQvPU8xFuDhFgs6Z2Wu5xAaYXQrnZdvmJm1\",\n    \"CxDcewQ92jNESyw9tN1nnBkTfm4zWXtpCztL6YKscbs\",\n    \"6u4QbYYSEyQh7k4DVwhR3uufN1fkiKhSSWGUdqCsgEaW\",\n    \"4MgKuWJv4LrkEV7MLWfYbPSYjroZsbQ9UmHXoz6enGuA\",\n    \"65rvwNHn7EafbtLiyTw5rKJPFxSn2NdqPseNNhRVt1Q9\",\n    \"5oS3FfHn7TMbtGc9MhhAYXjau4DAnb3Cr4XauGHU7jQN\",\n    \"Fe2UiEwj51xxqm8B9hPrZDnBqbQ1mCBujQXy3dFgm8xG\",\n    \"DNh8LYGCx3xLFVTKzMHwLSXbLVm13vqhEEaxKkWVfAkD\",\n    \"7JE33KJyyvrfCZdevERuRGpJ8yqD1aaUkhCLYPsSqjQV\",\n    \"7eQYgepuyxHuxRfrwVoPKvDErnttn3TN8gX4wJA8HAFM\",\n    \"AkQ5kQVHGLjEyHGCb6skYzLtxDg1oUWY8BP5XfVPreHs\",\n    \"7SmoBiJANwsxqQ5SmUpMQgSuPNr7FFshjXEf7hgDFjM3\",\n    \"BJwmXz7FdxFh3ULNar4YjBURUZ4KBxdteZTC6VzgQYnV\",\n    \"9rEeQgf1yJmSr8bBrj1P3FDBj7bgkHHhFkPjHpae4pww\",\n    \"2CnnDGvG6DMgw59Y4d6BEgDZqYWtD2aqpEYQ8u8v4W6r\",\n    \"8AThr4fWUn4jALMtCvZrMR8RXZxR6nfnjeEK7w5gebR7\",\n    \"FneQhRnyHfrSv7Dsc9y8iDJti3KtsZxae2utJMkMMHe5\",\n    \"D8oKu6bQeLNuisyJYwZGYWpGNimZ4PDUF3EpVWDRqi8a\",\n    \"6CDuoSsn4ZRVvcBMdh9NEKkJebF3AFMdYTnPV4YrfEy6\",\n    \"2eBLWnGVm8mnDjTAAipXuArgZKPsVcmbsc4uxdykJPaP\",\n    \"FW3QwvJ1ygweEicJsDYTR7qovboovng9NZZRjJ66mHGy\",\n    \"G75QTqVvnhSEBy9pcHoYDEKuoJVMbU1yDqbNzo3CmHJE\",\n    \"AdLUQX7C3RV9WQz8GdkQxBdGsycnPuHh22txJAc2voZ8\",\n    \"FiFKr9x91JuKpYjd5rWhrhWqRmzea8Z6z3yrrVpcdaRG\",\n    \"GheThYRV1npvMVUNxaVDMxoNKKJKdKjgxB8Qpwda1skU\",\n    \"AuSJRYhHktDdSYnWX1vYKPQiaZd8jyBY2Hf3eBZbpV7J\",\n    \"2sVkVQ1k6PqzuzH1EMaoRAcTFvMTHpDtNpWRV2t7M9j2\",\n    \"FDz9LnDMruf1UNwkivUmoBXJtS5odNsnozHR2gdrbqPA\",\n    \"GGSe4XKxgfwciAXYVgiEq7GN6fXF2jo1vdzFapYMzuWi\",\n    \"6SC5UywCz6ctkn6CLSVGv3bqgEeSkpWeGv1fUS3ksg7G\",\n    \"A1AtgG2qENuATRgRPEhjx8DMxcJS3Rb6LvcKVXtKVQCZ\",\n    \"EFpipurDmX4Lgv7V5TobgR6TMnBSZv734pgcZjWNkmfr\",\n    \"CX3pASxVsMYxxR4QdRE8XqYYu669ptLEhmoSHkn8gMWY\",\n    \"DdVKU5ykz2L8SX68vpeTDAa4f65aetrJ8TeBgCjuc3Ny\",\n    \"6tn8RP5NNHqwT7xYzGPF81y6d24RPzKUHiQb5QBqupvU\",\n    \"68N3E89wWZHNnkVPNeERMmDNQ2NraZUBzHV9eHckiyoj\",\n    \"92EByuW17QCD8J9P3SsxvsCuQqupn96vCnmUbDibt18v\",\n    \"HaSGY2YbNBYRNeTokwzTz6vxaBm3dxEpbpDStJcx1wJN\",\n    \"9hc2J9KVo2znHLwDEMjnKtnYDhYpJ6JmzmFH5w8LvRUD\",\n    \"AfWuErM31Y6tytDk2bE6dCbvb6Kk5wcD1sJwDEFPq5Ed\",\n    \"79sCXhxN5BiiQ5t6xy1zjb6tyZBo7SEaWNLrhqKyKeqi\",\n    \"DUVFetqnpDtcLFKiE5WQGrRQQFoZcHkufPzwaaPyE8xe\",\n    \"68xYzPLgakWQnHGwPbai5HJCfDA4vq3kCb33DV8LKy1H\",\n    \"E92GxaSdTC1qknxsNRNTJg5ucN5TBHnsH9FQ44NASekN\",\n    \"HnbLfeY76ULr418og2gn4b1ajz8ZaVpyf6u9odutztKk\",\n    \"Hye6NiPjVfPFxusKjvgwgrowLTzhNr955QciWACV9GXT\",\n    \"3fcoQES3gdnCRTpp2sf9BvQXAuaei6cTTAaniVdzq6sW\",\n    \"EBSdY5vvSHADimNkSinZuY2yv1SPnaME4Pq1J1XCiaZA\",\n    \"Gz6Bmgtx8EBpJ8R4s7XaEK3fQrmRjR7rmw4HzJhanMuj\",\n    \"6Ljib3tzBNhhM37wofa6UmjmNtJnK6p9H8f5yBC48fr4\",\n    \"4NYzBkxsbRANoGGGCoA4D5xtQL9JA8oGuSXkG96493GX\",\n    \"7hxh4VV6d3nuDt5phkFGiecBxw2Gon9iwRx4fGk2oMyP\",\n    \"BtSZJpJCydiW9CGCcy8K4k5XT14N5KBuhAwhg88pUsdL\",\n    \"B8NppGS6nB57jKFe4EDfRux77ZwGAJoRdNMgCXqAanmM\",\n    \"HPXtNBLdiARd1Lm2r897sdLUUmfJGd1TEi5MFBSTDGmP\",\n    \"8EuLkYtZ7b6iLAyMTH3N14ZvVBaV6Q5YvzKn5uCyxj5P\",\n    \"EQgudUcEjEtLVuatEiQVwuKR2nJyu7d8GzEe6du4RXme\",\n    \"4KDW5c1ZFwuP1hDsfkXZK1vhUBua9dmh4vJ1SwEiPfbs\",\n    \"95cEmgrho3rYji32PTuwNy9VmBTLjeFJGxegESawNDrN\",\n    \"AKpFAAwtSdra7MAvCRrEfhtfQWHjmB2ktTWY2u7ddW2\",\n    \"EjJUHgR5NPZEZAVSYZFG2JRCjoriRRqD6qrnvhhKXZtj\",\n    \"9mNPDcTyFvHZx6VsxqC4NqzPEsCxJiT8f2bGnLCYf3Pe\",\n    \"9pFsCvdawLS81W2BNfDSMHgcUPEZg5VQtfHtgsx5T38r\",\n    \"2wH1k7jbqCaSiV7uZ2sgB4nePcj2zvw6K59hhwrULLc8\",\n    \"7qz4UroSWKQpWgYvVqL1LTbwTdLJmXTehT3V49eMTPvJ\",\n    \"6FbQdBnLKJwdoB94DoZh1Ndkr2uj2xU2wTJwAzwpCj4d\",\n    \"3V4RF2jC7cqaoaZbxxE3C7LiEiVvHnCcmoWLYtT1qzc6\",\n    \"EX5zBqUbvqUSe2jiym8eGtwTSwsVJMioTbgqGsC14w2S\",\n    \"GJp1uACaLaLfTvkgqi4MwYvFQHd3gxFDhB1mzwkgkKAq\",\n    \"EWHRrDoxdpg4ymUBpqickHsHAq3wgSqpUWVuT4tU2VnJ\",\n    \"92xprJKBm5Yhbnn9Zd8XxjYfeU11C7fgPAizEfKTyXwF\",\n    \"DXnCCtH5yhBmFZsx27tkGhDK7YGUeTS4Bv9GULfw1sH1\",\n    \"67NNF4ofJWKfYx8kz1iETcXArXr5j6hQBgTTuXdjnknA\",\n    \"9eQMbdBpyyF9LtaCo8F8Tuv6baVCkkUAdo1VYXRuev2j\",\n    \"5NRDRcSAzcj32t3axyzz44s3p1qkokdP5e3smzyCC4Le\",\n    \"DvSFhtdHqbrPmZqAWaDUnZ7kvjf7Jdr1gwJFpoJ5o7C4\",\n    \"4jvKAYWjenbj9MHxo3SRydtUcpZTVyjZDPxTGkVAtGCw\",\n    \"EB8kb2grRBSypDUMowDzKKA72ostDa3PjdS2B2nZgYiG\",\n    \"2koncqghbWHSvJwWuYwW8gErSyEnjeKAKyetaayN5Zw4\",\n    \"68Gs67E9AWEXWWAgmGKeCgxcC7Exwuyzq3Amj5xBkdW3\",\n    \"yED8icCaXKeNDu7wZxpDHA5XmMXEbu8FMs8M4Srpxh6\",\n    \"CLLvUFXtR2mAjHNgQZW2UBTLDAWeYLdUhadRVK4mveaA\",\n    \"628mwdbb5zYJV2KbzapEpUjM2MnXDCFk1mQasa6MT5Ld\",\n    \"MdJirss3uFxMYNkhWdkJoyomKL36jEM5FY6EtbPWycz\",\n    \"D4jMddm7DLAoYbYLEnAbX3DZpFBPw8qzsq8RpreTjEw7\",\n    \"5Y8ucdd49wfe8bLWZVtDMjMRQfpTaPCUnmHY4VVTSaga\",\n    \"Fp8QyKF8jL5VpGENRQNEhUDrCz7WpjdeQzFqkEoz6BMm\",\n    \"6rEEzaSck3otK9g836t79F56nxCFyeMG415VShHfpNbf\",\n    \"563DEeeuQQfGRwGKYcTzAuinLphAeM4KsMYhWALVNzoi\",\n    \"ATir6JxN5AafeZZNC5Fu7tUyhBdtaQdBRf4noPzYStGP\",\n    \"AhPaLx8LE5wAibuiMd9mcWMoxA5cf4dFLjDgwupkritt\",\n    \"4gNXDr4rytKzuSU1CwXc1WK6Q3umATX3zXksaXeUt3Jp\",\n    \"49VeLX2AxMb1bgM9qoS3SpWWMMy4Au1zM1KjmfHE7Z6g\",\n    \"GAigLGCvwZCf64PaakNGAKVCuKYdBXyfke45A33THqBq\",\n    \"ExKjwcndhP1tooQSuEzozhbz3WToAKiu845TkwZfTpPw\",\n    \"8GSHYw7MvmA1gMPmHnSozARbq893XAwFxaKfy8KAcbyP\",\n    \"23JQ7s5c59RVZTuUHcnbhjTwrQUM8W5a4V4HWQC7std1\",\n    \"GHJen62TVhryA5C6fyENLTWyuiCXpn5F2xCLLf3KRtGL\",\n    \"79h3omi4qUwTvwYi5mQ5kCe5bm8mePrzwhvs1t4JFAjp\",\n    \"GjDrF1r2qC9b2G7fZDCZUfxuctHRxwcb5BQo79wH5MZA\",\n    \"6PunHMutJMuzrGY5WucRcLbzRn9HyzwWy3nzzgndeUhP\",\n    \"5bvBYSJwTXXtoY2fHhLbKXqVP53q6PAdNYLAzJWMz15i\",\n    \"7ouGcLhziZnNn8dmrcwhwCaAbB7ke2PY1ABiz6f6N8d6\",\n    \"C4nLYhuzMw2R1aZNQyhCtmnAbPAFdHPg12FS8PPb3mEj\",\n    \"343VzumBScV3R3MuYK4kyWothwJ7Nhmi6xG2e5bbuTSg\",\n    \"DLpZqSJsLzTwSVpqXh6TRobz2ZqG3fGha3pesNDRtRSr\",\n    \"2h8EEWqp2hSnaLLXEwbLdZ9zP3ktxXcy7pJQRoPsZ5aN\",\n    \"AVbKbyPMttG1tE6JwStEAodBg28GP1zBzyKQGmNvEgMj\",\n    \"H1dz2zWygACF3BADHfWwPUUmVQ8hEZrGnvhVS161XWxo\",\n    \"8mmybbeLsCszmc5yVeoioZYkYqMUbJ8hEYWSKuR1Bu83\",\n    \"FLghjupaBT1ucyrjFbfDAHFjifVFSX2rj5h2xGXUibZ8\",\n    \"3Vp2cJGBzyEAXW3MoGG8XPy7SRWYj3EaH6FTNH81k6rA\",\n    \"AYtKcKtQyBCmBC9QSJBbX6iXjGHCMmXReCm3TMKm8gVC\",\n    \"6qR7W7fcAHVxkaN6PxR4JGQnTwFTNzmtk39XjNkdu3S6\",\n    \"5VYzQKAUbbaLK1G63cfYSU9YFeSXCr76pyXC1YutsgDB\",\n    \"CvhMNUES8i2XseepwREaw6ww9yp7Y6Y9oguVVDyXkQ2w\",\n    \"BF8zCR5d5qGqPWrHNEvKA2Ugm6tKrW1XmNczT8L1t5nz\",\n    \"CcLJQm4T57dSq9aFiYPF2vTwwQocDywBthn82iq6wtRb\",\n    \"AYADkZVYwriGLnqoNmW1ASYsZyGfG6mR56zwGFNbLwnv\",\n    \"HmoZUGFBjAYtFUZ7NXLank9H9zKuiKbGgrR3N6ULpZJv\",\n    \"HaaZp1KFufbNNTGdR9KyB5DSz4u8peWfi91bRnzwCif6\",\n    \"Dq1nUpJQZz4ucej7UWVNHeuvcPAAUYb74AWjdHuTQAng\",\n    \"5gcF5a6vf5iHAnhKHhcfceXicrefXZ9L7PzqjjrzRm48\",\n    \"5w6PC6kkeuNdujRR9Xk92Wt7GA3FGkFQZEUWCJaGgCc7\",\n    \"6wEw67B3Z6CryAPEEcDJ8VCzU4WkmGbnmQVZXqv3dKV5\",\n    \"5UBiv17A3vDiU5LuyvZznC6votZSCU5wL3vdneAKc4RY\",\n    \"CCj7u5JmHah4uKCjCnPS5MrxMy89pJZMMg4T1C5kF88G\",\n    \"GAaYLUY4uYR3gkGYFvyEzCurkr6WjXVpKDLCK24SE4fZ\",\n    \"PHA9eWWVShc2gBLtZ6kgkTfQioZXG1xfNiD8VAodeLA\",\n    \"EVJ79UmDQC186dnxjxiQzNQwZv47oZWrNqqrEx4GFmLm\",\n    \"FkMddTt5GPB4jhXV5dNJDKJVysPKsfd8j3dFJfB1WrLn\",\n    \"LFcTf37ZpTWNYnjawTYtEtr86Yx1SHL1rhb5EBYa5Be\",\n    \"2vQ4x2vqoL1PbPuBPMvvyjqoaUx8zmKgopPCCR5jmoYV\",\n    \"J2ZwJVj8zPiABfSR7BBSywrtfWAeNd31ZezzRSYN8JS3\",\n    \"Caookmg1qjf4ChLLPwAUBFkSgi9MfCxXznzGMTr3ZHdR\",\n    \"7FWMBtzEq9PkxnxHc4Y7uGR3mAhYCTD82GZfHuvkCcuf\",\n    \"Aj8vuKtKCC2o1KxEkzFtZgPotHzzuBQxW8HAye2xB7sa\",\n    \"6y7oaW4YPZiUKbgLCYixWd9YREVLE26Q8zyqwvYe1aM6\",\n    \"49KrdH6pcPoenSaTc9Wbqr4e6ZwUnP19518YwQroAM6E\",\n    \"JLHAg2FnDdTuwjfE4kAbQtu61R69m6NVjicuZFtP4xq\",\n    \"DPqRsjT3MZRmqHufLw4dYiLryCo2HUr6FLSaK3WkosTU\",\n    \"BN2CwL1QJeJ2HRB4v8prpEuTHECCqZxMUMDUoZE2oUNq\",\n    \"8BCGEWouGCQQVjoxTPjaJ32YBnSRtwGjziEhESgy3J62\",\n    \"7Aso6Gwobypevp6ADioYePdVNtBSgN55XtbwGv7EyYkY\",\n    \"AnA11VTmLRDH6NmBxPNPwLx6rCxwfEPRQpEuoBGMSyvR\",\n    \"3t7poY3auYby6ZZarKimRevRLk81e7bZprXsUBSBbDkk\",\n    \"Fz9euah1t3ziQso4L61eb6up6Hn2c6CHei2yi649BTpV\",\n    \"8oYeQDqkAFWsxJmWoqEqcPdFWK484ycWb1ky1XbmHAX\",\n    \"CTs2gj4SXvdKCvbLeiEQzS3qtrKqZv5ct4Z9v9ZaAjV1\",\n    \"Fr4WkJbB6GpWp9QC2geVMDJM9U3bcHdMdqwKaurz37jR\",\n    \"CtFu1cJjuagARDqkn6mqtFjBHsosKJGfAKvMZzDSw5k2\",\n    \"GUBoLB3Fq61P3YkeZdCsqqj6QNbQWDJD7YcvkAvdnqjH\",\n    \"HYoq8inAmrfdzn6H693XY6uBJHmF89nYq3mmewVLVeeV\",\n    \"9gKc8WrGDccZbgjm8gh5yEK8Fbg6eQT9nsNVRhopruMs\",\n    \"JE8qFoXkztZTSEg9RfdTjTW5Vv1mfSa4eYh274xMKDGF\",\n    \"GnweFGB9gMXwqskp9CVUp6ZViXGLSpHyirdKWfYaMR5g\",\n    \"BEP9Dqv5y8SXh6shB1dnGCbYACE74qx2HUYyB6G5edAt\",\n    \"2a1DJaAoiK3Ah2r9DBTQwxfAh5xJTXzpiVeYDgXozHGE\",\n    \"Cyo1sntn2ikj7Kkt8zNR4YgeBif5oMMGtf8Phj8qCpdE\",\n    \"FETDaCTQ6ptjPZkHzsGRLDFfpHzmMjWFX3LiNCZ41Abq\",\n    \"3tytvPsry85qoLZCmesWwus9cbuqKixT23K4jU3Cxq7n\",\n    \"E2F6tHm3Yr3fAh57hmpCgSDvd4HyEoUKpCG9NAz3EhCF\",\n    \"DG4gJu6fnZH4aEQ7kLASUfDyj3GoL1XRR1AkgfQs9S9Z\",\n    \"8dJNE1xykVf9j9YxLiDegomo9VPSppXMxhdhdLNFXU3P\",\n    \"3nY3np1TChbRtPCj7SDnf53ovdABf1HY1gWPoEdg5dsF\",\n    \"2GtdDUKAuL2LexrhuVeRZ3kuwdft346wcRw13uoPN4eD\",\n    \"AE2hE6L4X6dwpofZcMJgedHkwuGWWZi4gwjxDhUAsPSj\",\n    \"Ff8RsrnQHB44MUDwwMt2T4nM9FNKAkTjVPbCSFTkVSoT\",\n    \"DzCVK6sLeSoUmR1bqcJ2HuqaKUfmCAXNMezx48Rkze2F\",\n    \"6reMsXuP4Yh2TCeePAB1GTJ6LEdSg9Q3noZ6EMAQgqcW\",\n    \"4GeiU7jjMJnefPoS2t9BXJyyaWALLLDCmJDpPBJiWj66\",\n    \"3bfgLnRQ1t3fXxzw6NyezP1afe7arJKaF48bso1Hrt7s\",\n    \"Fmkwcc7RcqBoWtVD58DjWwSACZ38ubV49Qm5uY9Rd2M7\",\n    \"79yiyZvaXkXbhoqbPGYgKx9eYik8RhTnKYmLMbG9QSLb\",\n    \"E9tJ5JPTVazdDwmQQNXpJux958Nbq3vMVTjFJbN8iS4G\",\n    \"5VyzAFYuoKFXX3HDsGsni44kzuNbgR8mNy4KtojSMQNR\",\n    \"637qT5M2soH5gJDDza7X7MzCxcgSGpbgo6ML3ZB3cRGf\",\n    \"GfRmQWFGffAgxgB7r5fEGfhp2Z2hZ43XNS2ZzPTLvKuS\",\n    \"Gr1k2HvwQjFKpFyWrThbR4mmQcnWAn88CgUCS2FgC1r1\",\n    \"3wxFEnUoG2yCxjR28hpgPNLQ5WUkiR5RS5j3AetwUsK8\",\n    \"Crdq3Wicowd8SwG3Eyo24WsKWUE1zc3tXKPSDZNcNstC\",\n    \"3fzv2CBSeyvTuo8KY72foMZ3wz8JkFstt8snVoEGbfNG\",\n    \"AAgLYhUU7Mzancmnh2Fgf3Fe1VxuiUr31sgWABNnfXf8\",\n    \"515Y4xz3ck2HqACdgptJmLgsxNkduJ966J7cKVyhPeFQ\",\n    \"74q6Y2gyP7SCEXRfp967AJHKX6A9C1L7vcLf378Whggm\",\n    \"3mEjsTnVx2M5GiZCPj5AkY8NnfbZbL5Qb4A1dFbGzNf8\",\n    \"J19kwtxhHNtVQ48QAnc38CUYeqee67piLFNJNxiuwjYX\",\n    \"8gMjYPuRPuQmQqcNqgdQWfGBUwAkUxVKKm6AuiaoFXvE\",\n    \"48Em8g39UVhXV1GqN9EpHjk8rEPHdrLgUS9v7PBKnXMk\",\n    \"6JnUFP43ZrbnJ5J69HKZJC6KbFngetiPgWyxjmArcWNf\",\n    \"B5QMA54Fu7WrJLamC8e3iUzGL3ZBxrVEvL7rB9WW7Urw\",\n    \"9YQRRnpujYj1HnhFYp9FSbmcZgiNEmZksE72X6rKQPb5\",\n    \"AQLYnKe1GzPx7medtSbRKWT6eiHeHQmWuHAdvhjq1YZd\",\n    \"8yxiXoHvpstvif6H4Mxpyu6zvUwknGCvHE2xvcjeLGsk\",\n    \"2cppkNCbt2HRcPwxwMzFKrozWpeYdp4ybhWB4utVyhTL\",\n    \"AcQLrjnkRRgEv4mvHfN8F6Q5o9VVKjGU75odY3DuDSb4\",\n    \"EfeNcLpzZKVeRV3LMFQmEs6duaRubcFUKMcyZCNZS8QQ\",\n    \"HC99JJ8p6XKN9QH4BhVKi499kFRo4dhvQbBdR6bLKfuj\",\n    \"BBrTjtS12SzgVtYC8F8zbsEkqVYXsGVsi7jKUYkUxxq6\",\n    \"FunpqyYsoWRqesKXCLBQeUxXGBo8CU8PBfpNncmFcdE2\",\n    \"BWqkepgz5qWfMdJqF8H5YuPosFYQbjYhd4oeEyJjSimK\",\n    \"8kiAk5G7vfirf3DBT9pTVsBeNcujXBWjHwL5pms7cuAK\",\n    \"6ZEsxuW4wFk6a5ErkyJXCNMAZSWnsjvoitLjgGM8kssv\",\n    \"mTcnPenb6FEfRDDj2W83GkPi24bhKdrFoLBcQ1t3Bne\",\n    \"2Fi8eTtR7eekE3QL1GJ2WAW6cg7abgdaLo62KdDk7d2j\",\n    \"G2AaKLFVo3W6myKcNJEs23VS164CXV5uZRdX61uQNZkX\",\n    \"5HvkCndv2WPKYfiQW1eQ6WkJCt5NsxMQ3QYWPqqSxUYK\",\n    \"E3Wjh2AhFvrwTPbTaHWEjY3NW8XBByiar9TzjYR9Hsz3\",\n    \"DcyjvinVxQAYNryV1mR8FsNvmGgboBhNQSUgcqLtxfDi\",\n    \"DtZP6Yz3dHiuGmFCTBCvFSTAhss2pceCU1t2a86isd1Y\",\n    \"31GcC7YSpuzE2wTAaMPEDyaQRN3fAVzLw8f14UC8Utf1\",\n    \"3S9dyFhXdTkbjQzwNpH6es7NrxcHe26qn3NsZpzUQ26Z\",\n    \"7ofzSnVcr62LJyvHWYFnRFg28UwHuHhPJHXca4SNXy7k\",\n    \"HyBS9eCY6vkV2imS6NQwzNWiQ1RxXrzU1XAY4CZm3Cn5\",\n    \"9hisxupaZzhLvbtEX3vLQ81v17VV2KUcPrgunevC9tY5\",\n    \"9C1SLrsS82B4bikt5GRNu7bVaC1B3oDBZdmXFrehV88q\",\n    \"BbcM6bmjiVgfCRxdbXBpyTCG4E3QLM36FyGFr8eihiPS\",\n    \"36LntPn4EA8v16kpDjLVXSjaT9UmeNS6YApDprLyoug4\",\n    \"5gL92HJtYqv86jARFiCJ4PqfDWQt3DmDrxuesomHts9r\",\n    \"qLXuMbq5L8tfgHHwRhYw5cQCxiQPwQktNe2Nehw331V\",\n    \"2hhKxZFYKGv8wsjUbE31WpT3SqqNRbzmtTcCwX1e4z4w\",\n    \"FS9L93c4KU7pWVbuTKQKu8rEnSShGGC8NzDq6AYkVwHz\",\n    \"FLHGsQurkvT1dcwt9Ev7GWtSBH9PPY7pFbCsEUXVYDMz\",\n    \"Dk4WhyGnFpU2tzYta7yCjeXCTJK59YzYY5PKScuLssj\",\n    \"82RUZnH3VTVHzoujgbZ44KD2yxEkHREwu3bpS8RvHUCM\",\n    \"FNyWujLt6qjjGB5sGcSuttqYeriqaUA3ymPmxv7gTTrX\",\n    \"DSLH8sNRsMR1xoc6PsAbRsr8TYZz1zCwSRdB2eX6rUam\",\n    \"4vz5UBumw23nwXoGRomsjkApEqHA7wdFq7C22YvqaE6o\",\n    \"AgjRWGZURNd2qUsgXrmpBiuafDksRu24ujc26kWJD7Wc\",\n    \"CEYeXM4Js67UUBX3BbaCex1NSADk1Q4Vgn6FUDDuBEND\",\n    \"6ALmxSKbfPfSvosMxQ3mAjXi2A766ieLjSp4cG1tMQsR\",\n    \"87E6Uu1cSmVw9f3qkNRyJifYa8ktpQ811eu6ZZQCgAP3\",\n    \"5MvdZ7EefwjoGqYCBDruYG5W8AvHPxQcne745nU8KCkq\",\n    \"AzrHVacNN78QC5pCkug7arK9wwdYc1Sk3zwg2Z5JovZd\",\n    \"9xRd6hEQaThKHTUDvyY4V2NbFhh3efQLnpDzdD79DxcA\",\n    \"99ucNuof42XNqSMwMvkyL67dnkc5K3DMStmtjP5Lb9Gk\",\n    \"EuKgZtutpruQasr824xGwUoE4M8PwAhzisxUY2Ej1P2H\",\n    \"EJKjoHghjmxyL3MKwW5JMgh9ZJphhFPMa87i8HzPdGEr\",\n    \"8SrP7EdxbSZeu2CtCCA2pcv9ELD9XvC4WY1o5XS8V2gs\",\n    \"4LyHdQuLSNu5Ci8Jte2C9weyUFqyix4ax6WLsBSMEQSV\",\n    \"F1gjYLg4JLCK2tuuyfe1Wpm4hi2QNHdj59CcK1eyDQKm\",\n    \"4FKxRGKogSrhoiLERpPsK7nRr5cPtfshG7BVXMdyJHch\",\n    \"EfN52qmrpJqHfanrCgf3ToN1SSvxPFPmc2KG7vb44wrk\",\n    \"A1UrbyWrFZWU9Yry6jUjdB8dUVzzjAjxwi8xW56ptY7Y\",\n    \"FzqAXWadkr2bJdfrBAYyXP8VPAZs2gPEzF24JRYRRPGK\",\n    \"H1eQqYLASgHxfFxyGztYhFrgy4d4N9tbmaPMc68WxQfe\",\n    \"GNyoSnNfTSZtBU9TDNmRkfgrMmgyDcwPLtvEekLFszG4\",\n    \"Aa4T1RpHqcjegKt1Cr4ADePFcLUQ5o6xdmDnf4qGzbWR\",\n    \"UijtBJXPzd1DCbsGxHoEgBkpu4NVYjKQ595CS9CnAMk\",\n    \"6nq7PWx9EbCP461Qvey1kri95qaGLdDAov8u3FYEm3NE\",\n    \"DHmbaDmj5HmJz1dsrheW1U8k5KVks4ZqCA98pGTMHTMU\",\n    \"2oSZbibykzAuM4AdxnhREeEMGhgG8aGR2sNMB6bUMM9h\",\n    \"7eA3yREf4naJLqfgAxg6brNjvSxheVQnpEWown5j3UD7\",\n    \"B1KYDdY3M4o6GVHMWev4LymdH9BDYicTEiSWXEqLYLGS\",\n    \"28vLThSCywKYHG8VypqbDockhYNAruAjcZJVGuqb3ecV\",\n    \"EiSa66MD2452CqQ5LKU7ywLe2VzCzEnDfs6u1zhLV3AX\",\n    \"Czq2cFyq1ZyLBeL6EWf2hTqwYNGTmzEygeCDN9eJWT4t\",\n    \"9nqZavC5YbjneLHwukkG9Px7VsHaahYiDsanE4QuPft3\",\n    \"GpuBi2AyJUMtBFpVt6cftWg7hWovMVihNthyK1ymYYqC\",\n    \"6KxiwvRY4JDudzhyPqAgGij49X5FwK1Z5NjjnNqjPGKk\",\n    \"3ncNpAhJupwND8PWNtQUGJaUsf1QVqaMxzg7LuKtmfRM\",\n    \"DMmff3cWansdUZShKXECyxswb1KG5kRZeVxyt4r6sSFr\",\n    \"BB4LiEQaB6ehgoMyWaFDjDS3b4eKRmuaYTihwYN4SejE\",\n    \"fpg7G5hK8RJDqzYmgk2Y9GqzyoKP2hvAeeNnQpMtwWd\",\n    \"C3tnALRJWYPAjUZ98baaf9YGZMdzuPwwuRCZ2tF5dvE\",\n    \"DvpLXpD12VCyitKDBTPqFCoJksua72NapUB5y3ukKM17\",\n    \"CRqKU5vCajtJR9rhSyuMPoSozid5iVXaMAP7xQNnFQum\",\n    \"72zrxAs4dGduWWTdKVWLoAn8yjgQ8evCrMGy1zQmxS1F\",\n    \"6n7BV4zzuGrtmpEirJZcRvZzihFra6SpgxMCM2U45rjk\",\n    \"2JLjoqprQq8cDNUiNzazfAm36aYZwsqawDfPgZoLuf8A\",\n    \"BPMB9qifCwH9E8EGPXiCnGqTr1f5dwQNVAezDDhPvVSu\",\n    \"76rUy2rVey3vKbviUw8mTuJLKPp5LwtqwbqBzbJi61cZ\",\n    \"92HoTLipoHHJ2LDXw8v25TFyKuHdzfatVYvg7JCTqgKM\",\n    \"9Sc2o2pSFpVcH7JoeSjHqQm93d4byWaRjJ7AaUxDfD4M\",\n    \"Gc1xK1WPAU5djraGafXUFzGQ5bve2tfKBY3GRDPGSDz4\",\n    \"DbQsxXmVYgkxp3d76vLUZuzW1JCU1r7z2AkhLfg87tuk\",\n    \"BWCuJea51hJWxAgLAX5u6XsKjs22PfeJ77pfFzDHaLYi\",\n    \"6Q1BSrwaYBE3AyruVpc2VWYv8bz1idk23sRDExY9ywGW\",\n    \"9j6UeGerC2WYytum2pQ83qGpcYWa6rMH1RK8oKnXHn2M\",\n    \"DRsr7juPNmRH3xGY1pRuK6vde5W2r3qK5RMuYCjzpjGB\",\n    \"HqQ3qqEVdimU1DePzqR3zoyxL1CdeowPHUwdJ6jpB1v9\",\n    \"Gwg2W5dRQWfeAwmcog7KMC7Yc3trR4UEcU1c6YTpYjN2\",\n    \"B9YCYVZibaHReNzuHPC776rw8K2jifRiFgoHYjzaEPQC\",\n    \"GAefGmwN9LEytdRnZEu74qd2u4rNQKGPK1GAQBD7f6uk\",\n    \"9eMQCoH4NSw4paUu4w6xKDhoTWCMV9wyetDA7ivvpqCa\",\n    \"3wdzi4giiqhTCwgSxpnCVVcrUiT64PiWUWa4qnZF3NNS\",\n    \"HAgNkS6pE42g3X2mqeAPJTXUywTeq3Ze7Nr8577RTSgX\",\n    \"GnGL2EBTKFU1DqznP8JhoxvqNsYYZXWFXpqiz7FpWju8\",\n    \"F2gXtQJqgqFSK24YZFBKmDDCju4ptLPEvW5AAjXcyjet\",\n    \"3vw1XMpLKmQirAGWxpmiAQ6c4PZmxptyisnfkBGZ3eiE\",\n    \"FMYGaVUz1AAiywb7nYJdFEsnPnzArf5ZfLCmekce2C57\",\n    \"JBzmEfz2CHK52CvndwoXEwn4TPfuMdtHFvQPRzDBR9ub\",\n    \"BxD7E7Nau9173SyqJqt6iMX5MAjRksWG88WfRgc3WcEU\",\n    \"FQGWB9EHADGwTFWCF9dRimjAzq7LNuZGx8cVCUjBue6B\",\n    \"5MsWsMp6VgHBH6Rp8XE4MnRmu8tAi8gWTEtifVRjNDSq\",\n    \"73iMGue776ViQWHCUenQy9UMkQvABWF3sgbog6Fsfw3K\",\n    \"4UddM2XWnYYLX64NA5czHQKfm6nPddvtjLJwMoPuxoP8\",\n    \"GSwto3WUvSMAZh6pmznr4vT7d79iJkVUNHznJfxYGjDo\",\n    \"GrSsqr2mTEHzg2Co4g5A1x3xWxNPbJKGxxC9DDxshHg4\",\n    \"CBobQtaa3uAY32sgFy9Zdsvu9tqDE1DZQ62cnYq9BLyE\",\n    \"EwvQ5YiQ84osxEFqLtUZXi3iTKNR5bqkA2KQ1V2NPdZg\",\n    \"9od2cpUH1BaomEZUG9nMh1bfTZ1FHFvGzsCzsE3mcTZH\",\n    \"E4VnuhvYDZr1c9NE54ydxsH9MnY2Yr6eZrDuxQ2iBaNn\",\n    \"DiXWzkZDWqhpwRuGZ8jFsWuC8Z1qvDiojZwCj8Harbrg\",\n    \"FbNZkNMgBh1jLm4XRhhEfpZNVW88EyTj1fBkbkdXKLP4\",\n    \"5E7wZL3uX1aY3mbDWvxRxbqpUwV3bQrrzttrvMASvHAU\",\n    \"Abb47mBXW5oSLJkjbn9LE1s7SDJHgKdm2Rgr4EubHJfk\",\n    \"5EU5djqu8xXwkoMqjdcfJcT8srkFnWmCDz7ath5tAEyf\",\n    \"FpaH1dND6F85CNDRwgsJ2nveqFCCHbrNARsqSqE9CNrY\",\n    \"J1Fk4YLiu2P6JZntjixa8xzqCPs2UC1YtfYEWvKVB95j\",\n    \"66Xz459nAxyrjRa9xQXnhr5kNsDxX8MPg3syeXFk3K5j\",\n    \"iWb8EWdYvXwFBVmhZ8unh81mBS4752uc3GhpZtsoMpF\",\n    \"G14GNCmgekB1CYiYtAXeHhr36V9k5Mrw1nv5wVyR5RBg\",\n    \"Akq1bbei4PgHGcnFyx2Zh12rbmiT7DumXsEmqc9u7s8Y\",\n    \"JARDrXasJbvcdFjm3rrZrtEj6beCgeQzwtK5neVUEgG\",\n    \"5Hj7ey2krJRGJJZDyBa9ywA18pUBtdWTevKpFeE1wFY1\",\n    \"AVzs7gZVmnRiqdsS4wPumgPsVZUbmDH7pKmoMHjL8hsX\",\n    \"rjrfbm5haDTTWq4atsEupXtz3aAe1rZyxfjN5o83W8w\",\n    \"8YsK8XHdEsWi7MGEcBhdfJ11ZXzmXQfLVe9fDPzDGpMR\",\n    \"DApMKeqYGPZUBarPQTeMEtvcNTafDFM3CoJwnv2dPaz1\",\n    \"2ULRECGf83Y5e8uC6wgQtCARdyB8sritvQf1nqCkxtTx\",\n    \"FeFWUM6mgn3enGcLo6r937AFMsn9FjKHNYvCRkBanSsH\",\n    \"2NBSdmB4ttNqDyLfUZ4RdTcAFsZXKiwnuggRscve75QE\",\n    \"FNL6f1iypo34WDMyD28zR6v4KheRm1n1NSSnHiSZAxL2\",\n    \"8Hhpbw3siRHe8m2Q3KNdgtJHXGSynBwn7xXpb7QwhHe5\",\n    \"9zBzPWE44V6jD7jdZxtVw19Hvi5ZoRRpHJuLhby73Wbi\",\n    \"8dofev14H9ebUBbRLmFxoFuKc8viEdPXZRsi22evyrJA\",\n    \"4RyNh2W3cfKJztUnnEmkQTxdcJ2ChTxQKKeWvKrKLUXX\",\n    \"AjFU4mET8AuaFW1WK53PVkotBXx3eN44TcxmMAj1DYUH\",\n    \"673uEEjjXVe4NiGpcTmFjXRbayLLqVMXsBwYxKqZL6Qy\",\n    \"CR7578YnCuFjw52taQ1QuLzi8BJD4kt5FvNf5FonDAri\",\n    \"9PUUuLKxN8u6FFvpsxstoxhFspyrGnFCQD5faj4CHxtZ\",\n    \"6SvRkGmxmWXpPwaKxT2P4N21gPoNTMCuHzQa1MJyARH4\",\n    \"CJQ1TP1zgtQf7PBczRVChSidpbC9TvhMksZfsT3CbLwe\",\n    \"5eptjRVdXsf75W86Tf3H3DyrRVScErwWjxpc7obhFDjC\",\n    \"DTjWuKZ3ejZBQ4Yh1YjupfjLsmZnM9g3Fb4DLw5dizCc\",\n    \"Hi3H9gfrD4gQgrn4P5CrfzHchPFT3NJJZgWj27BYbegD\",\n    \"5mYbNvsBmeM22QzRFi3iYJojQzZ4BRcVbRECxhWB6fXo\",\n    \"GEaPpLL549wm4itbHv66UCTKR6TGZ7g5awM82HJy3dbH\",\n    \"Gf33GoM6PxgAUupH1eHCvE5pEWFmJSEStmsJ8nRutx3b\",\n    \"8JjvRUKMBcJ4A9yP882yXEt8nZ7HjqrWFPkcAzQGLom6\",\n    \"DTh2mRahvQSz2JPjnWvkJcTS5d6Z9sVTYy7GrxYYHkg4\",\n    \"7JA6H9bJwwzumDqqSBpheHEoHpJMcQoC3Lp6rV6Sxggh\",\n    \"4du4avt8GNBpcBD6jxW4M16k2iqt765S9dQELb3zMaSo\",\n    \"DoM81KPbcwDnyrDGW1pErREf6cYLFQvm9BUrJReQuDJ8\",\n    \"2guiy9Xjgo2HT4UZBnXniut6mnEHZgWd4in8akrRtfcj\",\n    \"4fJPBfedjnVg9Ks1na1CDnSZ9LQri6cScNLD4aHzTEb2\",\n    \"7t2r8mMaShLVuTWfTqUuCwTPPKxTCsPuTeTsHmhzxcgK\",\n    \"D8wt5SKsLQCL7YPFFRNup3CNhSvJGyE8Khmsr5aZpPr6\",\n    \"7RJsvg3vHf49WBZu6N8WPQCdPdcKUkxekRQjjaKtGnup\",\n    \"BTrZcpjsrACbXth1KwPNYQUFUm7CrFHh4TJnoT9d9y6f\",\n    \"2VrKV7R1BLxparVGHdbn3s1UEZzcjUBxjqa5NyLwjP8t\",\n    \"Dn7FXt36JXRyLXXWKNr53D5PBT8guyS5XFZaGuxbCoC7\",\n    \"31ao4A14TkSsc3huJeSUGBd1HzVCWXcvqP7eJ24EhaCY\",\n    \"5vkXtP8xSugqvsidxVgqxAu2UcL7oZGLFLhhx6gBRGz8\",\n    \"6bMjJVd355ehDPmqsi6dS648vqUZx2fiBQkheMFfAC6Y\",\n    \"3kAYX2ZdNRoFvdzUYn6dczpmJbik3o3zyWVwpWthWTAA\",\n    \"6V9526u7ZGUrGTBdWop91rcL3m3rr8Pg9TDSfwkHKFQS\",\n    \"3BtzeqrDw3fmxXEMervndArcQBJY96JRXsdXwuyopM28\",\n    \"HmdeeMTNMmn1wJCfoLSfATcWycf3ioYsPjUdwwREWf7d\",\n    \"ESnV9uiQWPaaqsnZckUarnkG1GiYEpLqeHG8st76HFbz\",\n    \"EkRzfSEvxYfhF1aPaxnip8hxDrRQFFTYEYFCxQkJi6vk\",\n    \"7uumwpEyrbfy8XVounZv2S8gCwZSJNAqEYZGZbV8ETVH\",\n    \"DkJ8W1EsSL34vyaxq7ser2T1gy8MUKr84iAbNZBEZagv\",\n    \"21dGs5tYZY4nxUg8MAwXvyWQ1nHAgvzG8Adfh72xH2vg\",\n    \"GoBxTRqh751ndTAaQ34jNPMaCrCwHBt5pG82fLYYNBMq\",\n    \"BwbiNSdtt43GqMRztCcp5SZVub898hQcFLc8eGLiz6f1\",\n    \"GRuRaYE8jeDFc3PrgJExixiTjcGdZASMbY6rv4cqEBu1\",\n    \"DSP2jLfWXgG8bCGxDtMWTXiMvuHNjabTyqgUcpQUtJLQ\",\n    \"GwHVpPArCQM5x1t7Vdsx7nWCzr91bAU2bxW6Nb95NUGc\",\n    \"E31dnocftoqGLnzUofDB81Q9KNDRMK2HMMoqAyZVkcX8\",\n    \"7HDFk4RT1LDuJYbohJL2EbH42tzwuvNxELXuPVSdziW9\",\n    \"2RMKZxghUnPQAvPaswwHmBednjydZ7sMYoJ4pJjy3aZG\",\n    \"5TVqJTdNJP6t5B5af63VuLXRKJ8RqwnNhXxoQygMHdFa\",\n    \"Hc14wMjVZrMtiehXtkGU98sM4YbhaKHpCkLepPS31wLU\",\n    \"5LthJM89EqJBRzAp41CmAFMoXHQP8iH6qWDNcJTAbUSG\",\n    \"HxedzRp7SKjcrFGwU3ntFamZUR3qLDe5mozg5tLKZFis\",\n    \"F3b4jmc661fyuJNyQr2D8NiUtp7rjxqaqEd36D1eKj1x\",\n    \"Gn49NQsKtuZSpWp4HJdogiuZKQW3D5usYBaduA28PVYv\",\n    \"G7LHwBDCS6cVwBSxyRVW7naVztR8JGgnA1iaeQ2CGwBF\",\n    \"4uH1p931PXuWxqXBzfSRzYATJZzTHY2iEsbhZ69BMwBq\",\n    \"GYatTvpWZdbous5DysnUgpDQfHg677P8k4hBQpcaXhjb\",\n    \"FSEEKEYBDtXLCmBUJbRKsUCoeoSkTJYm4PfHrs3CeK8N\",\n    \"Eih3bJCLuEJPdt2c3kDUjxQ7dT48VMPcEXh7oGgk7Gjz\",\n    \"6VK37yY7HTbdDhJbZgwRcHS863JvYRdVmR1DtC8qW6br\",\n    \"8RMo4FnJsDuuHsbwA3Z1sVrxA7KQ21cWdY1aFxCELZYx\",\n    \"H8uwfQoekosTrqEZpXNBYys7Now5x8HmTo6cm9NWjLf1\",\n    \"CuUoRHuRTUccQdEmV2rVPZzBKCMMAoLB3N6wLvuPAHCY\",\n    \"C7wALnKAjKjnCWBhBiqcJaxfwAmSSMQVuSosyCpmRqjR\",\n    \"7mmQm6NUJ71gUWYJffzyMpNa5QLDztkkRMukSPyUPM1E\",\n    \"3Jp8kpNmJEtbqrNreHWRe2bbVmjRkRoxavWkqX7PYiTm\",\n    \"9agcsYdNLeuB5Wwyvbpoin4LdbJrqVBspjSULBe4rh9M\",\n    \"3eWbJV5Y3ck9ZoLEbtkXNRyhmsSqbFEF7H51UwPhimxz\",\n    \"7U6yNdmcUmNktmmGdbfkbvoFTGV3demKfgP623MXCBqN\",\n    \"398B3EHJVereNL4YCH1d8xFrWXQ7F1qjkys49tZeZmoZ\",\n    \"8SdioDTjUugQpVn8bTxJb5FpD6SK8vtuhA8NbKZNmLj3\",\n    \"4GXAuJzNkUERtj8n7KaHZ5YXrMUtxLyRKDqUJtCoDjPs\",\n    \"2HBvvkKvji6cWM4Mhz6uq7fMH9gAxvUtX44sgfT4JPfX\",\n    \"C8znrrQScBrTks8TSf5FpmRKBuyfZq2wvwMgEuFYS4yq\",\n    \"AkHAPCRQrUdP3e6BssmVuKmKRQFsBURxjSKZrT7tMT6G\",\n    \"4FXx2pNWnKbmKDW6WTJZTSsahfAgyvWN8Jew3Vkuzom1\",\n    \"MUMveTpXbcjtj42uyABNktX51U1tgjVKeefTqu916ty\",\n    \"FFtN6dvJifEhaR6qCHq8GkmX6Mh4mmFaEt82zXALHHtm\",\n    \"6NhvHMzG999eX9qu3QbUD2G7LLkPU3KVwFgiSPKop6xj\",\n    \"8eZXh3CwaZPN1WvacH5U7yKPxA5P9gd28bgrwCD5YorQ\",\n    \"7mUe1wZyHMwYpf6HmsaZNgQToKYUh3ZBY4nuJU8jPsq4\",\n    \"9WDvLq76m7BtGzbs77fBWXPu8MANDY2R8nLg9xMEJATB\",\n    \"nhtqtP4HJHwBoo22NWYgYYFCbwo9dWyK8LWEeVJ1FJL\",\n    \"DN997j3dMNvPhYLVNv88s4aNTs1fYtVc49wMHkMoM1CK\",\n    \"4qRPnSYpynVHg2NBBP7pN2JVokxe3RnxWZRZeMPaHNrY\",\n    \"7W2a958pX6iJXP2JeLFcy9CUF78vGpG896YdwDynDbiP\",\n    \"EtNAH2mtgR4bUMN1iJfciJxZ6ZWTTsJ6U3Gre7cajmEE\",\n    \"FNuMQr8daBHvj2bYTRWJSf6BGBqGfpyULx4E6KCMLHGB\",\n    \"9oc7CoCsbEVq3YUtKegL8H7UtsUgqyWHbQPuKkapoFR9\",\n    \"ALhMYmDofgWwhvY8muzZF9xZ12cQqqocQGy5Q9GQAhgn\",\n    \"99n7KUGGLsSZtiFd1ABbzPebKWAvPeCUHr29nkx8w54t\",\n    \"46UNvY4KvJsMTmN7avzkrMdTKCfcZm99nt8vTtRVC6CA\",\n    \"BxCwobzBeTcUvHVRHyxBXSho3EoPpooPU2C8R9tZa5Zn\",\n    \"9kxRBCKGuRANEnMZqdvM2QAVch4oVD3Mfdrn2rLmyY2m\",\n    \"GWWoa2dXYNmo8zoE5ApXgK7QHKEy9vHpoXvMxkQPENHb\",\n    \"4siTfAd9kmBRb8XVZ9zwaGpFaX6hCchUwKq7m9qq87kN\",\n    \"BQSGYLDYkoo6vBvWPGa3GiaSLfvfM4ZFAZZ5RYbY6g7i\",\n    \"3AHSB5SP5rw5fjQvvHeucQHtadDESH6bu4pbnGTVriUB\",\n    \"GmhUpfqR892DcqpsHfceAj1wYGS54N6rjdtqb94Nui9d\",\n    \"E2SCcGUmRMcr2qBpUDLhovtSn7rjmg9tRYVagJD8fryp\",\n    \"bwwPsNWg1fmk6wgkCPeg5HKQfcmr1d1KGqCP8XPshEm\",\n    \"DG5iSGqH4e7HMzWKg7TBw3EwB4FbVEBRdKfMwaqEefS4\",\n    \"9DNwYjCAYwhaQeKLK4yUNip3bAu6LszXSJtJykLkBXj\",\n    \"55AS6s6HobHGLCqiDqsfSFynaHHXkTH2KjXiZsiR3TJQ\",\n    \"FsT84VhfRcrapysDRtyDHuARGdTsR8fqEMqtrxFqx7ar\",\n    \"5T2aeXYVVJkFfosD5vrMuECmmrhR3x4MFqUwZmcouh3A\",\n    \"7yezaz99cskYfXp1EdM3Y398hPeoS5Bap8e9NmtkNFT6\",\n    \"CrfUetb3FEDFuEhA5n8HnWAnY46YTLkQn7zUjWPzgbQN\",\n    \"HkG8tK2VLshDVrpZghxzkQUDCGPAJUcsLPKNDoeM7NP8\",\n    \"4hDBQh6mxJ4otxv43k6s6byJmKs5mJV6fsuisNnXsrse\",\n    \"74ukGHGNJ4KZhrUnNQMua54Z3JjBA4ZiFm4jaivq1D78\",\n    \"4juX7mnu8NeDMnRw7pnGRZiAiiFJbMVGEThERfvVHj92\",\n    \"9zv4XLs8DA3no7UbwePwkPyJ4A6NTNSJKUy3sZyARU84\",\n    \"2N4FJDsQEzASXrZZgYgF8YX1oHzgeE3zVwrGEupcSXKo\",\n    \"94HPqAmzY5MC184V29kGgBmTrXArBEMjm5z8ottEi5aM\",\n    \"6B78TmHtfNTg68BUY8xQceeFTQZBcPL8fhLLHr2VDuG7\",\n    \"G1qgRpTKhoBsY17J3aHn1Z5PKzhHkYGiJu9Yn2Y6wGri\",\n    \"BLCiQEj6y47bWQiNZ1DDfbJFM7CcUjdaVuyLp8kDLcry\",\n    \"3hF8XUB2smNT2T1dHsXBBA31LW73jE6MebPQmGPvzn16\",\n    \"4hV8mNkSc3CeXZVd6JJcWSkUhXFii9WmAU3R7caWqYPi\",\n    \"5Vi83o98Pp5RDmNud7Qnj3Uiq982iW1bjrq9QJaqVQMG\",\n    \"FHrWiFFPpUcPH7tznbZzU1XHLSCPzah3PPr5qvavt8qn\",\n    \"CuRUJ4khZ1DoffsqGU1La7tpSdcPgYLB4wo8D7aciTXn\",\n    \"56xyufQgVxCUuuq2WnXsQvQDSQYubS6v6vJ71h7pHPHL\",\n    \"BCemJGmW31ocjYBW1EeZ7CkX7NK8F9z6ybbx8mjhfaCt\",\n    \"BaojtKxCLfThLuRXTbx5EiRTWxpWLoYun85HsAxP5bGf\",\n    \"Hc18LdKNWningXx7fhhHhdF1Z6pQ33sBbxvzusBJpUuG\",\n    \"GRkRtU6CrZY48GXvd3cXYACnpQcxweXcbYh93hAp7tFp\",\n    \"4tDaSL7YTAD5GQ9uE5JxUFBT9wZA1u8as8gGLvDW9VQ8\",\n    \"FpFYkjmrbYsybxDhBakeXKEQHXXKTrtTJqzcUmTfhb3h\",\n    \"524DnPupZRdXYcX8W11gE6u91yZ4RFy4AD5hEn6uUanj\",\n    \"CjMB11BFKy7GCoSQqn8QPxSPxzpazAyK1JzdTT7hiW7r\",\n    \"8NwDrVSaXW5zJJhbRXjn6tnbFuT7VnNt3iWTtycgVqGJ\",\n    \"Bt1xVXn2X2nYeum9rtaPf4tXEUJee7VFztsb489XC8kT\",\n    \"DzgGmEn5ef1JR7QWzTPQmcBZjnCgW9tvbpi74XFzcLwa\",\n    \"AGHpGF8rgtgqTgZUTvkAsmPsuNwh6sew2ohLXx6vM9zv\",\n    \"5dMWLkDFvVJvij6EngcsxiUNePezNpC2DmqwnFQzgiVN\",\n    \"AWF3FLkbFr57r9aZHVeHTzcv1VTHj46eqeCz1cUwboZq\",\n    \"9gmQqLXuFmXEwF2rWjPkHNrGeSASfCWCYFw6DWDWuNMe\",\n    \"8mRsZsmsAbKKh4URZBTWJQvJpfiN4DtcCL3K56FTpmyB\",\n    \"8k45LSizunc8VscRdjGWu9yNmu72EDA3dNNaofVmfUee\",\n    \"5spbT4sR6hcfgPCAATEET3PEsZjXH2ZhtxfmytUXMvxx\",\n    \"Eww8Vc8tp5dsCRwqrSQt2AzLb9z7FpXbB7EqtyzBQVXV\",\n    \"Gp4spWAeUUvEjtaN9ipyA5JVRsnWPBhEVNG91kZsjMqX\",\n    \"6QQWLpHx6iWECR2dSUwaW9JBWEe4PAqiZHDrLEsemuvM\",\n    \"DqCBro6ZLFyaBBZh4XfXmkX4QcxwnV5waqBiCbBKbu3c\",\n    \"CewK9MqB9jDW78HvvYSyNqGjjbF2pDP69U2CfFvHESpg\",\n    \"73DVfemQmd6Y9CQ8j5ke1NKEhCdS59wU6jZBJoaXTvk9\",\n    \"HfsehwegnmLwFmNdxd1NzDE5NoC3K7YER35PFsDutje7\",\n    \"HP7vYdx73TAgn9BCxX3BoWg44ZNUyNgCsyPBi4wAZMGt\",\n    \"9J1BP37gyVvA4CmmkPYg181FT1UsXkrSbuRTxmwAYnPP\",\n    \"AZxFWvC8dDtV8ws4SDpg9ccNjRhiNxCZceb7paAEgDQW\",\n    \"HyMVmbCtRJjbR7Kxov6miFSHBCmfSLiryQgsS1gUYbab\",\n    \"6QmFTFRpng7YDBp1JHj5owXGLrAt4LWd1wiAgRQDBN4z\",\n    \"6b52uHCj3Tv6cjhkbVVXTpXJRgLhBYJZ3h4uqobAYdSS\",\n    \"g5TgPjDRvrnNsSHW7gSjYuBZQzuBi58PQPkanYFfmNE\",\n    \"AokjvAQMRH7XPhCGzKtY8GVjewxTABLs81s7jzfGuGp5\",\n    \"J5iFvMUrZ1X7ywK3HXyZPMXBrK4of4KVF9wAPXg3iBLm\",\n    \"B2YFBWPb9Aujun886XYTbVCgvoaM877pT7D6yRqFRNSs\",\n    \"G8mKM2YZMrpCAoAK1nUtt5kfLD2jVp8Nxq8H6xKbsnod\",\n    \"Fp2aMrZkWPhgwUJyreKWwfkEuqTcvZUSSfT2XjspzuHq\",\n    \"Drm9da88Lkrpe5BVqUQsZw9a7TqYYx3KHZgb4LQpX25K\",\n    \"AtmpBqauJr2ozHq43WVLTxFvF5Tr3E35ZejV1C9hTLHY\",\n    \"okkVSrkBXGfMHvEfKGUW73XmJYbP4ojPbWsBXbYjvZf\",\n    \"AjuGjNZebbxg7QGrAjCgw8epgZL8FGPeHHe8V4TFKQ6j\",\n    \"9VVb6j1moDSCAJxoNXUzfRq94FvmMLtadqbFkc9XbBiX\",\n    \"D3jroaa3KMnUSxqBCRbaVcb4eJPouRaMG24HvemjF121\",\n    \"HXNc8PLzModqe7YEHH7VSqt1b6Jt3J3yPLoJudXeXU7F\",\n    \"Fdf3YvC5FHKEdQ7xWHDtosz6qkPAWXeYeUoBRBNXru9R\",\n    \"7iVPuJB1tYUxLtH1q1J5biuW9raP6Q39Lek9sjC5bwo4\",\n    \"DNJp2jmEy954RjHL9Za8K5c8JJy4fDRAMvkhqWw7nHVk\",\n    \"AJtcf7tbpX9RseGCxvgTtQ2W3GWSDXz81eRnUrb782Mf\",\n    \"3CVdzxRYyhPZnCZ449gHh3ftKoK5WcgFjXLNSN8AsGgu\",\n    \"381gUJa38mHt4Dfr2Xf3hNGMaAjcp4c1SrBF9nxRHLVr\",\n    \"8Y7Xa2UBvULkFScYaDYNGYLAMMrULBb9hhdfrmMX5dyf\",\n    \"AdHrCQzYQ8owPL5y1THQneWyNtXia9yQV9NbFzzsBc8n\",\n    \"2rE2vEtgBYtKgCsHPwhNazE2gZrbajvV6R3QHiW9cLBL\",\n    \"8iv93gi1H4gQWjXQusuRZCM32g6UPDtj16G6MnLTcmo6\",\n    \"7ezZiQ1FtbWNhqk3Z8T7tYB4H5NzKDLJkVBWWg268GdX\",\n    \"BPcrpZGuMHSbYQCXRZ1deTWrLZgazwcpmAgt5SHrikjf\",\n    \"3wPXQMoZtxzXPxD2f3vg2fKMTT9Sb2MzY8LNYJWa8926\",\n    \"DwS8tFRopy31f579y8sQzLc3aVsg9orujY8F64ghfP2J\",\n    \"GoGCUQiyUz44acgZLrt89sDL6YJEZoKYGxnCDrBh7occ\",\n    \"6USSuKp8Jf14RHCxL41WQ5fZVd54fH8zy2NnAuoDv2GE\",\n    \"2owP9DSx1H38iqZa1JiK3Q8NXqWf5o2gYPkuuZe78nKN\",\n    \"AErHFdpYv4YwV5VRodPEU4iWz1V2nLBQpEbjCdRa6ynb\",\n    \"GjZAqYjDiLri7oHdKWbCm7n4W73eaJPuKuby9zNcJYEi\",\n    \"43C2L1x8syK4bDuAj4XyoqcNyUXZzfoPpUu2PemP3B9h\",\n    \"YVjmT5DBpG5ms8L7JFgLD7pYxRH4epd4ftSBshnoYrD\",\n    \"5DFYBuCKPvJghXV2gq1Cfv6gtgTQSx86PcSz9f3hcDXR\",\n    \"9ZJc8YFZL1nDDUGTAbTiWToBzBKswwZ4eWHCsgbRCrPV\",\n    \"58Cxcz2F4tVkSm7cLVm9PJFDq3RjELvnS9PrWSYdx4aC\",\n    \"9awVX5ebMsU7e2qjJU7EoseuKjHjBqGpe8hyBLRboQj8\",\n    \"7B2XMmGb2s8D1XfgeVPRXg2a8tik1visWoL2E9WuAA4k\",\n    \"8XqHkZQZcDwkLH1k59tSxMBWGgF54CVPi4ysb97rWU7c\",\n    \"5t8XaL442qfRBSreE3VH64evRgwEnTehdLQaVvyGdNb\",\n    \"6RZMJPqYbgVZZbU7QnzFEAE7cdLcZQ1W2ZDW5cSty6uf\",\n    \"8X5i4X1ScRyTSa9PfdxFCpuxp3cokPHr6cPneHXqGKui\",\n    \"8UdSS3jheDUZx5BVhCv838HSRZRehioZzF1UFagwwC1T\",\n    \"713dhp845D81rcehGhYhcLpmER4MGZ2koeudHTrhbZsM\",\n    \"Ci4D6kjXjeZeAceGU5U6NnTKJRPcbRgwsR2oG3T5Tcaw\",\n    \"7kmRuVf8La56bUn3GG2sdhbuNrSsTvLirzBJeBk8wtZH\",\n    \"phoFn98RuVw4pz2yKSkiHsRsJ5SGhmNN32QggnMWqb7\",\n    \"9L1BkUns7ydLJDbQsADrStf2pcVV27gVNxU5kXTBxBkN\",\n    \"D4zcVyyvuG44icVUXioRnnGGBw2FbcsxfpoGkCY86n5S\",\n    \"AD51HA9nhEemo2w1pwnQ3BioyYVUWvNNNfArYpf9UffH\",\n    \"EwDXRCwwxHbWzsdpS7kfWwaQyGYzGVicCXKRpHfSMVYi\",\n    \"6sVdCLqTJJKnshmmZ1BurrysZXVzvEDurQCzTih2QNe9\",\n    \"5cCyXKYATyX1YvDKHsH4w1ekBppngPZBbCJq2d3hBSEH\",\n    \"AbVKZFQ5gSVUkDotZVakdup1ZjXyYNeCu3DBiy8iPUdC\",\n    \"7SaXkdzFUbZnWnx9cf1oPttbATFPMKwkiuGV6fwQy7uw\",\n    \"GvLTyRsZnn6u7Ns85sApm1pQcTqVdAPUD7uuwnccjiNc\",\n    \"Hxy2iNeEeyPLugXqMt2XhQ7TJL1KvTGDpHB2sSdffgei\",\n    \"J845wkEsvrdEDnpHeroCMQL9eCCeZWhu9ctMXQYkBLZq\",\n    \"94SEKeJDWEzwjiukWMC6Pairq4BDCGyNX63maCjDE1BR\",\n    \"4jZkx8T9JXL4FVmx3PmiSQvf3PJEkQnhkzUPSJAxgGZ4\",\n    \"6UsHbB1Ujb4XCJq8VEku4rP1TT38bScSzcLayXt9MQ3K\",\n    \"SDKSoFaazRpPZumPvnKCweaPmJnsf51wwS5956KEJWJ\",\n    \"EuE2tPXPYG8Uxtt3cu4DbkF4gJr17MkLnU1BKG5hGAKN\",\n    \"A2HCbrh9SZMD66mzezyZcmFrcuNgWUvc7D6Jjya7dJ3Y\",\n    \"3kmeQ2CP9YtjoBuRZKKP6DGjKaW9T57gV9ao7wCsYP4C\",\n    \"3W6r8zyNQfQVCFeCboM1DEarKdFYoy4qPPD1bErfstbv\",\n    \"sqsL5Riohr7J6YBnA7kvD9YoysEaVjcm5NjcWFw1Vyu\",\n    \"7vbrBuG9eCREiYgidUH3Re6SE8viQQyvuTbUX2xsviKL\",\n    \"BmWXMH7ya95u7JBercqf148L4EirWuTk3XUFqeaZtD4W\",\n    \"7k9oQSrDm6bmKDUGsCXPvMXW2PvkSod5cM7GSjjHaTxS\",\n    \"9xmLoTRoXvS84d8YHP5r8mJebMzsrG3dHiXh9GiLypu7\",\n    \"EwjUytd8yZvp6kQme6yeYp7NT4FwpJCF64rpNHW1URdb\",\n    \"AMFdmwCCD3t9iUAK68uzygvRiQhgrfGdA5xiVNhfVcXM\",\n    \"1wpFZkj3bBTiiXZWtkvn9EotZoRkZfJzT6RapVPeSM2\",\n    \"VZpPQdfnoj1zjYbEmEWCkEx8ht5Hoy6gzP5nS5TQuQC\",\n    \"7PnYT2XXQdczwPcXmpiWDw4ALyoMbixVKtnG7x2yE5fw\",\n    \"AT8qJqN4diFnR8r1bBWv1whqc5W8AKpS1wvDW2zuSdz4\",\n    \"AFro6PGXoqEZTH9ySHuTQ2B21zHWxHJoFjfzJdMV4387\",\n    \"6uAQNrxPgMeHtHaZ6fSN3E5u9WvVD835jm4i8GDx6NvK\",\n    \"A71sesk2Ybf974h8QhvJdee3Kh7ceir3AosyrsoEKVKd\",\n    \"EJErvn9J7FpTiEtHgwWfH5CgJa26BbxLQuJW9WyBAWyb\",\n    \"BXYpGvKDfbsCEqwAZxDTAGzAtLJdxS1yzfiKXEwoq8o7\",\n    \"HCLkytrtCnB9MX4PMKR7YNJEDmFKucmYhTLbru8SUDZU\",\n    \"9xatkfzmA57dkPvX9CTiFGPt2uFuWJq4dnV6PWFUCaEF\",\n    \"29iTPEJmFqSqnsLRHwmKsJTdDraxXAxG8e7p7sNYweH8\",\n    \"9o7S479zJaTjyfEmfdg9qwHdgNDA6fxGT7iwYCS1hGxz\",\n    \"AnHLSmb5hkojnHLQafGLizueePpfnJLK8X4jnq7ESAgj\",\n    \"6Xu9AHKDgc9eQsKHnCLHUJCzVJNpV4QVirVnLCMYn5J7\",\n    \"8ch8dspRoxSrsSMqH4pGNwXvZ5KGW2PQVrefg6WeFd7K\",\n    \"8WE9i6fBvhXwQNtNkWqg5qH3LxmVHpeDPqnzRznXog8\",\n    \"EhjHn9RfcgoBKaETi4n2nqnU7ajDMbjzmg7ndmpSjv7K\",\n    \"8X5grbwjrZ11fsDJSM9seHR6y5ky5agCk8Qwb3sDgHJR\",\n    \"7CLHhT844cJ1KVxxFCztxsc16gsoUuohMp8tkd44B6L3\",\n    \"FhzpARaC567WmTfXsnBjpEn5iNidFAMikMMexJggq1Hj\",\n    \"AY6WCsxYMGgpALqJvDEBbSfJ6fgALMtCv6u6onLQo4up\",\n    \"47ta5dRkAT4AKovQT7yE4T578JfkXHTjpiVSyPxvT6GE\",\n    \"FrAkshpfffurLZVTp4GTZhprcK9q3bEwB5qs2ikt5yM7\",\n    \"9o16Zpkh6SFEAFNnqbWfGwt79f7hSoFFjQMU6o5KpoJE\",\n    \"FPQLy4Bjrac5njoLjY5hs7zzf89P9vMkCZTXfrsx7CRT\",\n    \"H4Zyz6NmtHXRhe7hY3mt6hd1rHjduxDDrCgbTXtYSkq\",\n    \"7dJBf4VWCWBSDLgxUbGUheVEFMewoXZrUmrrPrfKmTSx\",\n    \"A4VaQrSJ47nXbTvYvCUvHuGH4Kqnum7AT4n9EE35cYij\",\n    \"FyTk1My8pevYCdsPA7e6bwJuNBTnWcfsmB35aazP1pd4\",\n    \"BV4eGikYcYTRpVYwH4sAWbDqd5PGFd8F6JWWBcjX5hzS\",\n    \"4rUbEd2VBZ3CB9KwmGcLC5kqBh8L7hBuPkkxcRPdSD4Z\",\n    \"BSCheCi4yo1HhGqtfUhmRVjvek7PtiqAFAA2VQvaUQJj\",\n    \"GRjuPSgMLyiVZhhtgagUC3TM4Fc9cWYTCrmGVMcKavCy\",\n    \"3ULAweUoXoQXRBiJJbeJzaSLpBoCjKJWwYKvDwV5M91F\",\n    \"8Nw1yBgxq7kc4sGBnejyochCDEjtVTj1CSKLoXRZAXi4\",\n    \"6hA5efpHQe4djTzYZkJptakpgZV6Gk5WrtubzNTgkb6V\",\n    \"2AedKK5LycV9MNWhPAwC1oJXmHLp9gFM8T7zFDtKWkpF\",\n    \"9T36X2zBgQvDsRWXGJm1ojDH3mcVaH4EtC4xNS9ZSPXt\",\n    \"At7Q2KvHtJgxgDggrioY2p2ySWXcGmwBWC74xL9j5HEH\",\n    \"3uuwwAkqg3E255TrbKkGnrg4Y8YrTrUki85pjdZYLRJz\",\n    \"6eA6ryktidDikVoLTcHhx4YUukGuNCSFaLjZ3bvrrWh1\",\n    \"BVBXqH8e6U2PBRoRLGQbqU26KqSgjVGCn27YZm5iVyRH\",\n    \"9QHLFoUm9nDWEfvA1Bhcmk58VyrEvQGbtfeKCvbc8yBF\",\n    \"CLoQz6DmNseaPmG9xrzfb9SrYJxTWYrau3BovGdPxQWD\",\n    \"DNmAHk2JTQNy7osGUT5Xdfau6q9o5MYRBCh8PDjMsXBX\",\n    \"yx4EQxCxjwm7exNoZxVHn8VefKqVpRTcrRE4ufBdQXx\",\n    \"BVk35Fz95xP3hwHzC4NjTzUvbJ9XEwwV3M1aqu4URd9H\",\n    \"JK3H48QWao4gzMMWbn88nWdyKjmzWRVi8ZpqD6vocJ7\",\n    \"5NJtupVD6BHf6qfUkorcNTcQ6nABBJiqBzaJsqxcbB1y\",\n    \"9Ze7GM8jzChdRD2h9UbNq6omP4d4WoWtyib77NhWYF4z\",\n    \"CwbK6874JLS7v7jxsVy3gHGdQf2pjrJzYy7xPEANkqKW\",\n    \"Fcdn5QPzCQ42mMneMFnty3VKQJ2WK125dFD5Qyy2eeP3\",\n    \"5mQP8Li6Ee45qoJ9mjak9pmEu3Yyski7KzXZSNH5wKye\",\n    \"7QTCkP7Qd9PmkzVR1Yy5NNB1Zvvvocu125VR8tvt9eS3\",\n    \"9t2zCqdcibEnEwD5M8cmerCUfJkrXTmrxFfTDSwodoDb\",\n    \"F75Q6ZzWLtrafnEbJK97YWkPuwLNtj4aD24qiV91FCwA\",\n    \"ANn7etqH2Yh55vdwQ52Q5fxkex4idQuNRxs7dQZagQHU\",\n    \"AfwR3tWJDr6d5ct9z6456naux9kqroYz21y6nvz7TSVQ\",\n    \"6X4mxW2GmhXAgPkteRbWDPy6dJYvNCP6EUgqrcocSUtm\",\n    \"BK9WdRtF3RV5jaWcWgps7EdapfpVHEbi17KWVQ5BJxwc\",\n    \"87QLcvBCVmfcKo8sVZfPEbRS8PzT9tsgmHuHxRvvrChv\",\n    \"7gC9tMfnGzWAd3MvyUC8U6x2G4AcfuEtFWw2yohxMAtF\",\n    \"3EGBWpVrkrnVjCGvGsk9WbMwHJLt2yNuhqKLSg7fU3xh\",\n    \"Bt1QuCyQ7E9aMLApEjT1MyDPan4jseTvh18iwSYAqgr9\",\n    \"G3U8AfegZ9bNejm57P32qcu7Lme4n3FUYHWAbhmtnToz\",\n    \"5nETDWuV84wnBycyfJDDr4RfMvrhidPvsVvgN5DEmqpj\",\n    \"bjA36FrnirsEEBf6yAjD4p2yj1ump7E6ckEri8XSXuE\",\n    \"DvBG81CLtqtdLXA5344udrnBMQoFokvoNvWgF75Rnfa2\",\n    \"6yJ4fkhk1p3whda3Wx8BWmrfzKPLzujTNnyMvurb8a8s\",\n    \"DM9GVPXdBhawCF7R57KPWgoWaLsqE2ExGRqaqdpGhbZZ\",\n    \"GfYLmg3WEpTNYvu7rRZc7UjFCaPMw8QWucpaV2k4xxrV\",\n    \"FhvjfcGnp6wYhNajyPLwYR5ju1v7PtjPYiSeUskabYss\",\n    \"DXads7rDmAH7252tGPHW7ZXsaFNvFcxu85LywyBycBVm\",\n    \"2LpVMRh9sSvgSKpiBhejXcKkYJrMMp1edM8cbQVvuBsZ\",\n    \"HNtL5Cbxe1fz9PPin7b4uJSEpT2Wxmjum3YbjA6nrNau\",\n    \"BhPJrNc2g46KjzK4EZhsaA4eUsrGEMsojEBYB5mLiFy4\",\n    \"G83eQLCxHyo4XwvggUTtdmz7oTepGAdvazNkwLLgYyvw\",\n    \"F9SzX26dpjdQfQjh5dwvwHFDcCNTtuDgYDGTXE1zCGux\",\n    \"H2ANiPJfeocsJJKY4gCCUyX3XTumZwoYFt5HUPvyzFxB\",\n    \"ErX1Ymyycn4MzA5Hzjn3Kv1esAMwJKLvpGxDtinK2xWs\",\n    \"56oFwa3WVEN9FQgHiAfTisBPaesLKimCh8c9hnV3ZoYk\",\n    \"D9SkgNFCHBKFNvCc8aX9qQUAMMx6cgnnmKoWh1Wp3sud\",\n    \"ZFCsDW7wVC35oxvdtcDQ1bVKYgBzLFXhfFNVqmSZobK\",\n    \"22WKryaTKbVSp258Vk5H6sAyZEVpo2hBdQMMfvA1WnWo\",\n    \"7q4h9bUd1d6KrJ8MGVgqLS87UxtWvYTdEX8A4pfopip9\",\n    \"3fCWJeYP5zdJR1cAbVrU5KFJ4tuYPn17BhqmXvvcmsF3\",\n    \"GrXj4VvNRsKyoKK2DxAgX2QoDBZRXBN3FtZMRh1vUM9C\",\n    \"C5E6NkL1LxMWYMUz7HC5PHgLLbJHuiH6RDUYawbP3k8j\",\n    \"89tscyjLzYYhpkoTwJaqp9c5kTYbYJna4XavkTLhsNdc\",\n    \"7xjXKvRWMYUMHpXYkzuV2J7jFV7tAwmemNafz3Z8t29Q\",\n    \"DUMN1o3Gfjvf4kwq8W7prA4onRrZbPAtUk4AEB16Y2PN\",\n    \"4SK1eR4TC1R8STm7NxZvLYM2ANYriNcDry7CbpiFWk73\",\n    \"5YAVyvfvdoo2XbMShC7VfcCWddwK6MwnCneDvZR1Fdna\",\n    \"ARZJpwPpEbfjH5vp3FNC9pWbY6oLJhNsXb3o3bQUuJE6\",\n    \"8sTcusBeBFrSTuDcvCrw4i2kk2tEzBj6MKFDMVLQft1v\",\n    \"6dvjoGqozLgLvk1ktq4PvSKcbhjXxqDB9FEbkdh2mk3W\",\n    \"4gDHoSQ1V2jACvT6Dy9z9rm6HBCijmQ6KWCHrLBbTLab\",\n    \"5pBqfqughBLn1wFA68UVg7P5UVeRZ7ru6WVBEhGrrg7e\",\n    \"5d1yjkcG8Jbjx9hDb1GSYzkX7f2QxutWRjjDMc1aQ6vF\",\n    \"FyAmJowLK5qNXY2HZshwG4hG4R5JCaBagEaxJiXDcb9k\",\n    \"AsdKh7Qsa5pdo7nfZggJ4PnmTfaRLqZEHCf9P7oVzVjo\",\n    \"7g1oGVBfpQupEDCU5YngocjmGVeyjtdsV9ZAQhwC2hKe\",\n    \"FB35fGEzAQVu3Cr3JehRymHhYUsGtRiMwNdVHhKnftUR\",\n    \"BK5h9D7zNTJieswbgsLqt76eBp6SiJ2FSR9N1vmNuu3y\",\n    \"CUtWMwksnZMBETchfpREx6YFJtKKVttaJDXJHfVwnV8s\",\n    \"EZUmY7LQ8zD34DsheG6WPxHC5RoodzTpHsKGqnku1ere\",\n    \"EePACWswyUniWFLJtSrQBTzMkxXCG7ScrZBZSyH4Dt53\",\n    \"5YiEGR9BY1eESajKYiB7UuaFMgw73xG1gZ1Uuz3ENVQ4\",\n    \"FDDRYpeBL8EAe7pCcWp8WSePPWv86HC8KJcHp3dqaqE4\",\n    \"4ayQjUpqL1C4J7fyySSHqa2LtZU1rJqfFHtT7xTGsN6M\",\n    \"3nWpbs3Vt5AkJh9LKvYMae1xXvYS481eHhGDAChnBWmf\",\n    \"9dtHvJWR8mkSoQqLU9XKi3xDcT7dW47K8TMxQFxFtVfT\",\n    \"HuEuHYZBCQx6tp5b984kPBi4paPsG7h3ddicB4jrTYza\",\n    \"EK72pmM3sKq8ZACk6GiZh872tZWCN15JKjM5pZ6BjTT6\",\n    \"9VGXQzFRjV6FukVGz3XA41zBtvoc7FwD32QkCU9v86o6\",\n    \"EnfJxqJtBTCuzmpfCJsHj69KL6w7ic7fZ1ou3cYru5EC\",\n    \"BPAuLkxphJNwNBqLPC4AkXHcs6RacDAWTE77f6zuUd5Y\",\n    \"AVK7u6hGJog1YchsKxJNUWcXGSxxijHnYaj2J3vdM55f\",\n    \"CQxTpQ79Q72srC9Vormuco7fxpBFveTfNCv1UrHJFtVG\",\n    \"7Sng2DVk5JBiK3TUeMkLdEJEWUrbo2RRHFhrRJvMyN8Q\",\n    \"3sv3h8uAgMTWmWmUd7xpdztqcDMArH4Sx4whNsDskhkd\",\n    \"EjSnaWD3MFjRhaphTBbPEotMgf28QU31nkvKNyyQhmmd\",\n    \"3VY7xcd2sssRCLyH2TzDFVNH9165xZH55JRiViYi9zxC\",\n    \"EtnLRQriT1QJ3rWKAJSNzXb4Z6SEkMrMjFVfYNtmPY5c\",\n    \"GcLtdiSBBqmmDHsJifu6HpJ8KAyMCJjDVvf8DSY6UT8a\",\n    \"CmkZiVG1Gwho5oY7Uawkf5W2VvYaa4bxbmqmvhsMVDXq\",\n    \"5yCeYSyxaM4TR2rmFg7MJfcuxaExjxJg3iqEbgkpMdzx\",\n    \"2Vv6XM6CCMj6gbce4tcKWWST6EgVeydD35fHHfjWvHSe\",\n    \"EA3pcfsRu3LEVwLE9JFfJP7HrRed2e4zp4SpNMWSo45K\",\n    \"AU6qm2v7yuSKDGGzBcScrZH1CpZ8VCCZ53UV8nBp7RyM\",\n    \"CfAZAqXXbwXFu4eEEWNvZpk94inPUuB3omTLmtnvnXKw\",\n    \"J5MTnbyQ6JmfHAAY2TLUkd7okSx9qCaTjSTXSccru6G7\",\n    \"CuxLqvCdtt1FCmn6KjHuZp37LNWD3Lg8N1KZp2WdcjES\",\n    \"7yYNmMe7S7WxUFh3bRaXEhWXaMrnLCeGKPcRRNuRpGD4\",\n    \"4GJAXhd76ZgJwu5MsJHEtdHPebAbVuNzviWYP21KFnRk\",\n    \"CN13PbURR5G63gCEnQTyRwN2X2Yr9VpADE137xSHVoaA\",\n    \"EJBY9FrfRVA8EXBz4oFD9mTiVeG9LJaKk4BcYTHMNx75\",\n    \"ChvWAfjwuzEXGWeYJ9yge3s4XSffwx8pwvJ2brX8Ly73\",\n    \"8vKhGoNR4TGas29eHdHRd9ve1SkrbN3aF1cpnipe2ZrY\",\n    \"7aX6y3fWhnjnVoF7C3Dy4TAqeDnFFgcCNZXHwQgwVbfj\",\n    \"D2UBaC4UCT1UtkuJGpzgQPBaVLefD9yhN3nCqMuFY8Dv\",\n    \"DPNZvfsCNQe2pzgai78UfDqQGzXTjMM1iLGr4FjpjP1s\",\n    \"EJMpubPdMtNe4Qktj8ZJCbsHrBPTgqfJ4KEBUMc4Xjyx\",\n    \"Au9SnFxYU9yQchoXxuJEbAABNsHej6y8Y1ZQ2aPAhRha\",\n    \"DCqvk7K5bGTNY63NngtZfdYxCdDoPuwc5pwysLsWc8Jd\",\n    \"9Nn5bqRQ4AqnSMqdRjnmN4Yu3ntHM19JBoN2MZYHxdbG\",\n    \"GTiEBTQzqXE1uxYBVAGziWsm2cyVKKsHMAGQmSkZQiNU\",\n    \"EWi3H5WFSP2DYY4a7MfHfqGyN4PgJPnELvzjjdYPpete\",\n    \"F63eHvnEzdwyjPx8Le2DKupDGsS8cp7B2nFbDxf1NoBu\",\n    \"9ecsMaP4WKWBfvLHJWabdVYuJo7BSNFjG9VG8WXqiWQ9\",\n    \"EyyNM2bVcRy5UCnqWJaw7W1Sg2QfKh6wQ8eD7TmXLHtC\",\n    \"9sTipjTfiWRGLXYPrm6AUPmm8Q1T5FRtA3x9eSs6iXdt\",\n    \"FwekPPDDCUt45AB4qe8RDGGH8HR3Exk2CPFdio2QbozN\",\n    \"CQzVkQcjfDahbQ5GCbH3YEULAyvRtjiPmC1bKSsLtAbA\",\n    \"HuDzmCnC1p1y3xgntyotTrrZ8bhAHSSvj9WN52R3Ppkt\",\n    \"3gyfEikJYYrtVD9kdmngvjLcWXywiNkFvyRaCG4JXF4N\",\n    \"FPw72u4vSgngQPnHXyD1S46FCbE99wxKxFk5kJMeUhb3\",\n    \"95VcGufyRQZYvbuS34NtAcDpXP5R1zrPRy6TATSqeeZu\",\n    \"AFphT154YDuVKMMmW1n4Zp6agNpjGYoJNwYixSizZwhG\",\n    \"BMYmx5KvsxgNGpgLkCSyZgZ3pU11WDwkrPYBNHcjBST2\",\n    \"B8EAYj5yQnJf4zMv7yoPWATKgLzmStnNo2a5fDTExg64\",\n    \"3A82Mr2NYESmVi9gGxgmQ6BbZga31BpEhSPnfsFPe3ms\",\n    \"8S9VV3GTi1w3edo8mwddu59DhWPDovGG1TvwSnx5jbSk\",\n    \"H2HFgcRb8UHM8XzH22tnJzZPoMZej61geHSo5DBCvb5C\",\n    \"5UyKxxNFH3jVoKd5XhAvSgWfDdRr5AgbDKCRQonieWrU\",\n    \"DKajkiy8nh7nbEeTc8vLA1BTpzUvsaesJyoTT3NwqPop\",\n    \"D14LsewfPok61EtmKnJeff3y1GD9b3hxFqB3PLJL6JrM\",\n    \"DaM99zYaEqZp9GvvqXhuWiTZTCC65CBRMUG8xnFV6sW5\",\n    \"3RJQJFN789LokkAYapKN1tYpFZ7E5VeFb3QtBPWXVX9V\",\n    \"D8QrLNaFPsXzYvk5458GcT3mof57T4ALdh97huQJU2tn\",\n    \"CVXAb2QchgH7TgjFBhFV3yyTBkveYkHTRbfz22yZDezJ\",\n    \"EmaK5daQxHrdk7sotNFUJRxuk8TQCVrE6goCLtoAq7PH\",\n    \"FJ9oL9fKaSLfxuaDZig8xPjYgtHjpZUB7GUnEVrMJB4T\",\n    \"37UxYDQkqfr6atP7HayXbwPQF5QGipu8NRw7RqpqZBMX\",\n    \"DTwHMVvNXzGKuU56ftbMmezNHeN6kUfT97ft7pkurfAc\",\n    \"6yUz5bsNMbJHPJTUTHzRPxdF8utWNMsUWijAqD5pWyHy\",\n    \"BK7UFit52zbJYgjZs3kJQkHDAqRdBb4b1GDTsdG4uND1\",\n    \"6srWjmkyTXpFH4RHj5VvAbkTbBdPhAGMtmj4ofT5cyfm\",\n    \"9UNhptqT8RF4wWNkqxPGkQ6z7UVqzScEPQS26tW6Y1Zb\",\n    \"8SFA65UuRB83FTAFqfB63G66Y5PjyGuohCLu6VtRnj9p\",\n    \"CZVzUxBejzNshCq7mnqgWQbBb17hH7Ph3dB8L9LQ63R\",\n    \"2UzAdbdBS8nw5sMgopKMUZqjfKqfvoBKM2RdaHettV8x\",\n    \"FWK42JQXwKLSAeGPUSXxMc7qjpZTayZZTdSq2Nnt5Dun\",\n    \"D8kPUJgBEzsguo65SLAztFRYYwaBX2YCbdzDtiGcaP2W\",\n    \"AR7QHhvyGRXA6gdRozrg22Y2Pvog2gLy4vg4Eqxjw1Fj\",\n    \"8tLY5XhxzxFboPfTdPW4zQiBe6M95VjdsRnUD5xD7Y2p\",\n    \"E6ZbsZmZp95rWrWnuQ9b3nVLADNkg8HXATJ1yS7oUX31\",\n    \"9hVo91Yrv4uhBDcCNFtPX1AYGgperGRVVRVDof6TUBQR\",\n    \"FGa2fTUny46JX8KiTnJ9KECo93SixQs5KAQFzvaqz8pL\",\n    \"E6P7B9s6joNoWQNMekodMoQUVdCkpurCzfTAWHkXFpm3\",\n    \"urKQ3q7qrRytMBhoJ8jv3C3743RVFaV3wE6fwPoxmmC\",\n    \"CeaeUv5EjTqgBXYJni1cWFnkUeVQApQ5MzgTvAACxUoQ\",\n    \"FUF6GJLsqr74SvEnvyrBVfCvDMsvtuuytxKAhDw4yNAt\",\n    \"9TTMfW83B7tXvA1teQcjMQonriSnzxnttXrntYqkQKZJ\",\n    \"Gvw5GaJ9kLnBdJ4ScpUe7FqSysi1KTfKU2UP1waHg5nM\",\n    \"2AEkLQykmpM2ABPDYH1VNgQnSBiX3LQek8kox2SPhzZ2\",\n    \"FY3PPNh5MyF5VgtHwc4SzERo3mT9L6tzx7w5UQz9wea9\",\n    \"AFJ77jf7NnWfMMKuiweCyo7JDs8TMR2TG6V2zuSWWe1W\",\n    \"D1SqmPwvUQqrt65XWPxChNq6XmPkKonWMecsKEK4KXGg\",\n    \"AjDAHicKDw3sEWB9qJzXV7fK86eUzgtQa6ZtaQ2aL5DX\",\n    \"8DfydiXDB32i13ePbPkecyJhvSASMWQAugzzGBKQjd9A\",\n    \"ECW9ZPfp9b5CvB6PeF9WNXQtURjUmHnoqUXXT2n6Lo4G\",\n    \"EJ66NQL3yd4LPUtrkXPLEMBqR5o4ZkKMJhwz2C1Tkjxp\",\n    \"GCp4E8Pk2gmMADim3ZfXKNZzyr9QWnTgCySkoNKBud6V\",\n    \"5FzHLjXomxc9EKkW45GWKmZ3u7aHkEPy3thNvduUdC5k\",\n    \"89PYSPQygAxpzmquncGjoncr4esxyKSZUZYydBzHgMgc\",\n    \"GyQV4dqMWgPaTZ9rN123dn3dXkw6QxpFDw72pGfaacfB\",\n    \"51cu3Ev4dmDCUq9tzgA7RDgeN18JtGG7YcA7K7g2uMee\",\n    \"13rP2hHBXdFjWZckbvYgcvGaEzhHCFNyFn2ary69uidq\",\n    \"FW66L7jBomxHAWWCD6GbjBXMdLD33NjoJEcQXsQb3oEo\",\n    \"A9cAq5LZBbD3iAkNVjNBDg7fhfSyuAnCxUb7Rm5iCchv\",\n    \"EgwWHjHZuEc1D6xBQiMDKwSwZgEErxWhGVtagjKgne1C\",\n    \"5CaW86ukEjVZwqfH4YEyLRHHAHRoCrzMnf4evqYYzAr3\",\n    \"GEhTWR93NzvQ6dUnuqFtjygcndkrAeqNkVMrCHNM6DSa\",\n    \"8QaioEwVczKgsF32uW9TTfB9KPVCRE9crQ6bTchpxt7C\",\n    \"FmA7nabREsyrfJjbo99H88fEBSq4Jy9Rc3FP12fmikSS\",\n    \"BGBgNd63TqnmWgiNkgNFntYv2KskBYhCvyUP9bMB9FBY\",\n    \"ESsRLV2JZ6uaRzW67Z5cH2obPiJRnPHSQqU3mjS2Be57\",\n    \"BUb5q3WT7RXJXgLBXTWTy1YEjJca7omrpgnvQEtELrsm\",\n    \"DrqohgjkqBdeoLGCmd9eVW8kpaUnpMfoNNbBxoUerX1q\",\n    \"8A8rHeUmLsycBbDAWsTW7grktfrfPjSgiKzHyAoiwoYp\",\n    \"GXPrBWuQhL4ud5Q1Htj2FNPV19ebM9aHLiZ9aAV99TGU\",\n    \"DBtDG14tJ9FCdhEhuqx3ps9drXtGm65wr3cxa7phicpr\",\n    \"EzM7pnEFshmSybRnSfqALXpiHrDeom6fKADDma12Wx9H\",\n    \"3caAe1CeB331VNjQ6s85YpmjCACmrbSPUWBUHPGjzGMH\",\n    \"CQcGBVhp45Ejm3ka9AMXSFkVNFyodJQ3yUWQ9pp1F5X3\",\n    \"9M8S7JVAF2LRyxJDVFyej5rAiMA7rk9ZuKTEBg9jxKm7\",\n    \"CV2AFNbQUGt3ghWo8bp9XivmcVS2TJoivTnyfM7rHMQ9\",\n    \"48h8u6zqdwrmiWD21XnKkSLLaBhkcJFouhSyGsoJpvMC\",\n    \"6paubNGxKnBSSH12bELZpNqHJaL2P4hZJzMdfG39S4YZ\",\n    \"2soaXbpeABcH9kU72LPTdxshs15dodLuPH8YGdVb6mdm\",\n    \"9bv3aBPcZzZTBVp9dCi54Tq7qaitXRHQ754x8duiEmqZ\",\n    \"GoPz1cWuJL94mjqAfrnWD51EM8aWdgw4RvMHuoc7bmjw\",\n    \"BGmKYgurNoM2KST8UhsGPZ2HCTy3bd37GzyibL91ezt8\",\n    \"G6LcwAdeZg1GWWVLCp3B944qTSLvFpDJXm6R8PEM6cVo\",\n    \"BNyL8rvUVgg4ABqNvm5MfRGxppXYy7JDUg6tVNa86gvV\",\n    \"Gbs6kAadUCLojJuojg1QH58SXVAdV9JW6NdGHWomgSD9\",\n    \"34EwL2r4srNPoqXxLCxtC4S9BpbjPWbJd3Sea7Uuu9Vz\",\n    \"GYAKar28eVBLr9ZjheFf2VLVvAL99xKUSMXaUrpbHegA\",\n    \"73SY7x9tqZa1sJqdAxzH9T1svkJmR328WhLAiHhD7kQQ\",\n    \"No5xDkvQrEt28tweMTZVELcnV1pADddDN8C2v8eexen\",\n    \"DN6n1CWtdZGgJgNbszYnCpnCi5JyTqdqdnzduiE6FapD\",\n    \"7ELzKS5oa1pG3DZVQqSPAjqV5AYN7sP6Yx2cfTrWLg5x\",\n    \"99A89PUriKddcNi1nnbdfnKPsifQyYJgUJr8U4tHdpan\",\n    \"FZuis6WuACnRadBRB9JUpNgmNbdBvNK7ccWZjWMfr3NU\",\n    \"BSrPFK83v7ELRNybcwPpM7upn7oVXYnHtgKnydoVWHMy\",\n    \"Rjze9cVEsrre97h1mH4L7PNjf7DWA56mU43uy3HUjq5\",\n    \"3C6GyB3yVDcnK5UJJWcoqG1S59AsXq1Tka6jZwYbHPSU\",\n    \"J2bGhvfy4zF6qwe79ju1VJiehLQXRv5Ki4iFXjJvEAKf\",\n    \"6YuPtFkBkRraMzxEowW2SV5Tmov74ESuG37fVTJEY8N7\",\n    \"7uN2EbEehHc2rQc3wfbQonGj56gC9ZYr7aSKRuzTDWMc\",\n    \"CgJx2Q6RkM8zyg4n9ERKk1yMFJfK1yAoEHT5JVPThXHc\",\n    \"J5CBp17Bxvf5S5igq1SYnmXjbK1UTurZQRCotzBS3KnV\",\n    \"Gx4Z6trpmSoVBJ4FQ6bEWSNhuWZEpyniPvwAfChxx5bB\",\n    \"3Vu7b7wLuckJvpibnv6pM4DoMHjfDgvj3kLQLJ7mUAea\",\n    \"CeVXxgDm6MR5biBzRqLW7U9uv47nfrZMYJ5BtTbGLPY3\",\n    \"7SrYEtLPHC3etrkzncFEeooesKRpjHiMJEUSQDMYxEvN\",\n    \"C9tu3mHobNu1evvnQfSXViiKaSexaTT8izQLXJApro8S\",\n    \"AoNVE2rKCE2YNA44V7NQt8N73JdPM7b6acZ2vzSpyPyi\"\n    ]\n\nexport default cyberWallets;","import React, { useState } from 'react';\nimport { Button, Form as BSForm } from 'react-bootstrap';\nimport { useDispatch } from 'react-redux';\nimport { createMint } from '../../actions/mints'\nimport FileBase from 'react-file-base64';\nimport TextField from '@mui/material/TextField';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nconst Form = () => {\n    const [mintData, setMintData] = useState({\n        creator: '', name: '', description: '', DAO: 'caaDAO', 'selectedFile': '', mintDate: new Date(),\n    });\n    const dispatch = useDispatch();\n    const [value, onChange] = useState(new Date());\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        dispatch(createMint(mintData));\n    }\n\n    const [startDate, setStartDate] = useState(new Date());\n\n    return (\n        <div>\n            <BSForm onSubmit={handleSubmit}>\n            <BSForm.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <BSForm.Control \n                type=\"text\" \n                size=\"sm\"\n                placeholder=\"Enter project name\"\n                value={mintData.name}\n                onChange={(e) => setMintData({ ...mintData, name: e.target.value })}\n            />\n            <BSForm.Control \n                type=\"text\" \n                size=\"sm\"\n                placeholder=\"Enter project description\"\n                value={mintData.description}\n                onChange={(e) => setMintData({ ...mintData, description: e.target.value })}\n            />\n            <BSForm.Control \n                type=\"hidden\" \n                size=\"sm\"\n                placeholder=\"Enter your DAO\"\n                value={mintData.DAO}\n                onChange={(e) => setMintData({ ...mintData, DAO: e.target.value })}\n            />\n            <BSForm.Control \n                type=\"text\" \n                size=\"sm\"\n                placeholder=\"Project price (in Sol)\"\n                value={mintData.price}\n                onChange={(e) => setMintData({ ...mintData, price: e.target.value })}\n            />\n            <BSForm.Control \n                type=\"text\" \n                size=\"sm\"\n                placeholder=\"Project supply\"\n                value={mintData.supply}\n                onChange ={(e) => setMintData({ ...mintData, supply: e.target.value })}\n            />\n            <BSForm.Control \n                type=\"text\" \n                size=\"sm\"\n                placeholder=\"Discord Link\"\n                value={mintData.discord}\n                onChange ={(e) => setMintData({ ...mintData, discord: e.target.value })}\n            />\n            <BSForm.Control \n                type=\"text\" \n                size=\"sm\"\n                placeholder=\"Twitter Link\"\n                value={mintData.twitter}\n                onChange ={(e) => setMintData({ ...mintData, twitter: e.target.value })}\n            />\n            <div>\n            <DatePicker\n                selected={mintData.mintDate}\n                value={mintData.mintDate}\n                onChange ={(date) => setMintData({ ...mintData, mintDate: date })}\n                showTimeSelect\n                dateFormat=\"Pp\"\n            />\n\n            </div>\n\n            <div><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setMintData({ ...mintData, selectedFile: base64 })} />\n            </div>\n\n\n\n            </BSForm.Group>\n            \n\n            <Button variant=\"primary\" type=\"submit\">\n             Submit\n            </Button>\n            </BSForm>\n        </div>\n        \n\n        \n    );\n}\n\nexport default Form;\n","import { useMemo } from 'react';\n// import images from '../static/images';\nimport { useSelector } from 'react-redux';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport { getPhantomWallet } from '@solana/wallet-adapter-wallets';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { WalletMultiButton } from '@solana/wallet-adapter-react-ui';\n// import solMintsLogo from '../../assets/SolMints.png';\nimport React, { Component }  from 'react';\nimport images from '../../assets/images';\n\nconst wallets = [ getPhantomWallet() ]\n\nexport default function TopBar() {\n    // Can be set to 'devnet', 'testnet', or 'mainnet-beta'\n    const network = WalletAdapterNetwork.Mainnet;\n    const history = useHistory();\n\n    // You can also provide a custom RPC endpoint\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n    const data = useSelector((state) => state.data)\n\n    return(\n        <div className='top-bar'>\n            <div>\n                <div className='header-left'>\n                    {/* <solMintsLogo/> */}\n                    <img style={{'cursor':'pointer'}} onClick={() => history.push('/')} src={images['LOGO']} alt=\"\" />\n                </div>\n            </div>\n            <div className=''>\n                <div className=''>\n                    <WalletMultiButton />\n                </div>\n            </div>\n        </div>\n    )\n} ","import React from 'react';\nimport TopBar from './topbar';\nimport { Layout } from 'antd';\nconst { Header, Content } = Layout;\n\nexport default function BasicLayout( props ) {\n\n  return (\n    <React.Fragment>\n        <Header>\n            <TopBar />\n        </Header>\n        <Content style={{ flex: 1 }}>{props.children}</Content>\n    </React.Fragment>\n  );\n}","import React, { useEffect, useState } from 'react';\nimport twitterLogo from './assets/twitter-logo.svg';\nimport './App.css';\nimport { getMints } from './actions/mints';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch } from 'react-redux';\nimport Mints from './components/mints/mints';\nimport { PrintPubKey } from './components/mints/authview';\nimport AdminWallets from './wallets/adminwallets';\nimport CyberWallets from './wallets/cyberapeWallets';\nimport brandLogo from './assets/caa.gif'\nimport Footer from './components/common/footer';\nimport Card from '@mui/material/Card';\n\nimport Form from './components/form/form';\nimport MintNavbar from './components/navbar/navbar';\n//Kellen Imports\n\nimport { account, Mint, util, Wallet, WalletI } from \"easy-spl\";\nimport { useWallet, WalletProvider, ConnectionProvider } from '@solana/wallet-adapter-react';\nimport { getPhantomWallet, getLedgerWallet } from '@solana/wallet-adapter-wallets';\nimport { WalletModalProvider } from '@solana/wallet-adapter-react-ui';\nimport {clusterApiUrl, Connection, PublicKey} from '@solana/web3.js';\nimport {BN, Provider, web3} from '@project-serum/anchor';\nimport BasicLayout from './components/common/basiclayout';\n//import monkeDAOLogo from './assets/images/monkedao';\n\n// Constants\nconst TWITTER_HANDLE = 'solmapsnft';\nconst TWITTER_LINK = `https://twitter.com/${TWITTER_HANDLE}`;\n\nconst ADMIN_WALLET = 'FYFpbvpzWQMPBmG4joHGprsjiJsudkpqxjTepFEWeDUk';\n\nconst opts = {\n\tpreflightCommitment: \"processed\"\n};\n\nconst wallets = [getPhantomWallet(), getLedgerWallet()]\n\nconst App = () => {\n  // State\n  const [walletAddress, setWalletAddress] = useState(null);\n  const [isAdminWallet, setIsAdminWallet] = useState(null);\n  const [currentMintId, setCurrentMintId] = useState(0);\n  const dispatch = useDispatch();\n\n  const walletContext = useWallet();\n\n  const network = \"http://api.mainnet-beta.solana.com/\";\n  const connection = new Connection(network, 'processed');\n  const provider = new Provider(connection, walletContext, opts.preflightCommitment);\n  const userAccount = new Wallet(connection, provider.wallet);\n\n  const address = userAccount.publicKey;\n  if (walletContext.publicKey) {\n    console.log(walletContext.publicKey.toBase58());\n  }\n\n  useEffect(() => {\n    dispatch(getMints());\n\n  }, [currentMintId, dispatch]);\n\n\n  const renderConnectedContainer = () => (\n    <div>\n        <Mints setCurrentMintId={setCurrentMintId} />\n        <br></br>\n    </div>\n  );\n\n  const renderUnauthenticatedContainer = () => (\n    <div>\n        <Card>\n          <h2>Please make sure you connect with a wallet that holds a Cyber Ape.</h2>\n        </Card>\n        <br></br>\n    </div>\n  );\n\n  const renderAdminContainer = () => (\n    <div>\n      <Mints />\n      <br></br>\n      <br></br>\n      <Form />\n      <br></br>\n      <br></br>\n      <br></br>\n    </div>\n  );\n\n\n\n  // UseEffects\n  useEffect(() => {\n    const onLoad = async () => {\n      //await checkIfWalletIsConnected();\n    };\n    window.addEventListener('load', onLoad);\n    return () => window.removeEventListener('load', onLoad);\n  }, []);\n\n\n  return (\n\n    <ConnectionProvider endpoint={network}>\n\t\t<WalletProvider wallets={wallets} autoConnect>\n\t\t\t<WalletModalProvider>\n\t\t\t\t<BasicLayout>\n\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t<div className={walletAddress ? 'authed-container' : 'container'}>\n\t\t\t\t\t\t<div className=\"header-container\">\n            <div>\n            <img src={brandLogo} width='100' height='100'></img>\n\t\t\t\t\t\t<p className=\"header main-text-logo\">CyberApeMints</p>\n\t\t\t\t\t\t</div>\n            <p className=\"sub-text\">\n\t\t\t\t\t\t\tView upcoming mints, and vote on your favourites ✨\n\t\t\t\t\t\t</p>\n            <PrintPubKey setPublicKey={setWalletAddress} />\n\n\t\t\t\t\t\t{!AdminWallets.includes(walletAddress) && CyberWallets.includes(walletAddress) && walletAddress && renderConnectedContainer()}\n            {!CyberWallets.includes(walletAddress) && !AdminWallets.includes(walletAddress) && walletAddress && renderUnauthenticatedContainer()}\n\t\t\t\t\t\t{AdminWallets.includes(walletAddress) && renderAdminContainer()} \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</BasicLayout>\n\n\t\t\t</WalletModalProvider>\n\t\t</WalletProvider>\n\t</ConnectionProvider>\n\n  );\n};\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport user from './user';\nimport mints from './mints';\n\nexport default combineReducers({ user, mints });","export default (address = '', action) => {\n    switch (action.type) {\n        case 'SET_ADDRESS':\n            return action.payload;\n        default:\n            return address;\n    }\n}","export default (mints = [], action) => {\n    switch (action.type) {\n        case 'DELETE':\n            return mints.filter((mint) => mint._id !== action.payload);\n        case 'FETCH_ALL':\n            return action.payload;\n        case 'CREATE':\n            return [ ...mints, action.payload];\n        \n        case 'LIKE':\n            return mints.map((mint) => mint._id === action.payload._id ? action.payload : mint);\n\n        case 'DISLIKE':\n            return mints.map((mint) => mint._id === action.payload._id ? action.payload : mint);\n        \n        default:\n            return mints;\n    }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport reducers from './reducers';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}